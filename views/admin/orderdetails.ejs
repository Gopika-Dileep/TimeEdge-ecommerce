<%- include("../../views/partials/admin/header") %>

    <style>
      .content-header {
        padding: 2rem;
        background: #f4f4f4;
        border-radius: 0.5rem;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }
        .status-select {
            height: 50px;
            border-radius: 6px;
        }

        .breadcrumb {
            color: #4b5563;
            margin-bottom: 1.5rem;
            display: flex;
            gap: 0.5rem;
            align-items: center;
            font-size: 0.85rem;
        }

        .back-link {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #2563eb;
            text-decoration: none;
            margin-bottom: 1.5rem;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .back-link:hover {
            text-decoration: underline;
        }

        .page-title {
            color: #1e293b;
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 2rem;
        }

        .cards-container {
            display: flex;
            flex-direction: row;
            flex: 50% 50%;
            gap: 1.5rem;
            width: 100%;
        }

        .info-card {
            background: #ffffff;
            border-radius: 0.5rem;
            padding: 1.5rem;
            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
            width: 100%;
        }

        .card-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: #334155;
            margin-bottom: 1rem;
        }

        .info-item {
            margin-bottom: 1rem;
            display: flex;
            align-items: flex-start;
        }

        .info-label {
            font-weight: 500;
            color: #64748b;
            margin-right: 0.75rem;
            min-width: 130px;
        }

        .info-value {
            color: #475569;
        }

        .status-badge {
            display: inline-block;
            padding: 0.3rem 0.8rem;
            border-radius: 0.5rem;
            font-size: 0.8rem;
            font-weight: 500;
            text-transform: capitalize;
        }

        .status-pending {
            background-color: #fde047;
            color: #78350f;
        }

        .status-processing {
            background-color: #bfdbfe;
            color: #1e3a8a;
        }

        .status-shipped {
            background-color: #cbd5e1;
            color: #334155;
        }

        .status-delivered {
            background-color: #bbf7d0;
            color: #064e3b;
        }

        .status-cancelled {
            background-color: #fecaca;
            color: #7f1d1d;
        }

        .status-return-request {
            background-color: #fee2e2;
            color: #991b1b;
        }

        .status-returned {
            background-color: #fef08a;
            color: #854d0e;
        }

        .items-card {
            background: #ffffff;
            border-radius: 0.5rem;
            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
            margin-top: 1.5rem;
            overflow: hidden;
        }

        .items-table {
            width: 100%;
            border-collapse: collapse;
        }

        .items-table th {
            background: #e5e7eb;
            padding: 0.875rem 1rem;
            text-align: left;
            color: #1f2937;
            font-weight: 600;
            border-bottom: 2px solid #d1d5db;
        }

        .items-table td {
            padding: 1rem;
            border-bottom: 1px solid #e5e7eb;
            color: #374151;
        }

        .edit-status-btn {
            padding: 0.375rem 0.75rem;
            border: 1px solid #d1d5db;
            border-radius: 0.375rem;
            background: #f9fafb;
            color: #1f2937;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .edit-status-btn:hover {
            background: #e5e7eb;
        }

        .cancelled-section {
            background-color: #fee2e2;
            border-radius: 0.5rem;
            padding: 1rem 1.5rem;
            margin: 1rem;
            color: #7f1d1d;
            font-weight: 500;
        }
        .returned-section {
            background-color: #fefbe2;
            border-radius: 0.5rem;
            padding: 1rem 1.5rem;
            margin: 1rem;
            color: #cad80b;
            font-weight: 500;
        }

        .total-amount {
            text-align: right;
            padding: 1.5rem;
            font-weight: 600;
            font-size: 1rem;
            color: #1f2937;
            border-top: 2px solid #d1d5db;
        }

        .modal {
            display: none;
            position: absolute;
            top: 30%;
            left: 30%;
            width: 450px;
        }

        .modal-content {
            background: #ffffff;
            padding: 2rem;
            border-radius: 0.5rem;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
        }

        .save-status-btn {
            background: #2563eb;
            color: #ffffff;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
        }

        .save-status-btn:hover {
            background: #1d4ed8;
        }

        .content-header {
            position: absolute;
            top: 70px;
            left: 240px;
            width: calc(100% - 240px);
            padding: 2rem;
        }
        .negative-value {
        color: #16a34a;
    }

        @media (max-width: 1000px) {
            .content-header {
                position: absolute;
                top: 50px;
                left: 20px;
                width: calc(100% - 30px);
                padding: 2rem;
            }
        }
        .approve-btn {
        background-color: #bbf7d0;
        color: #064e3b;
        margin-right: 5px;
    }
    .decline-btn {
        background-color: #fecaca;
        color: #7f1d1d;
    }
    </style>

<div class="content-header">
    <div style="width: 100%;">
        <div class="breadcrumb">
            <span>Admin</span> &gt; <span>Orders</span>
        </div>

        <a href="/admin/orders" class="btn btn-outline-primary" style="margin-bottom: 30px;">
            <i class="fas fa-arrow-left"></i> Back to Orders
        </a>

        <h1 class="page-title">Order Details</h1>

        <div class="cards-container">
            <div class="info-card">
                <h2 class="card-title">Order Information</h2>
                <div class="info-item">
                    <div class="info-label">Order ID:</div>
                    <div class="info-value"><%= order.orderId %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Date:</div>
                    <div class="info-value"><%= new Date(order.date).toLocaleDateString() %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Payment Method:</div>
                    <div class="info-value"><%= order.paymentMethod %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Overall Status:</div>
                    <div class="info-value">
                        <span class="status-badge status-<%= order.status.toLowerCase() %>">
                            <%= order.status %>
                        </span>
                    </div>
                </div>
            </div>

            <div class="info-card">
                <h2 class="card-title">Customer Details</h2>
                <div class="info-item">
                    <div class="info-label">Name:</div>
                    <div class="info-value"><%= order.user.name %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Phone:</div>
                    <div class="info-value"><%= order.user.phone %></div>
                </div>
                <div class="info-item">
                    <div class="info-label">Address:</div>
                    <div class="info-value"> <h6 class="mb-2"><%= specificAddress.name %></h6><p class="mb-1 text-muted"><%= specificAddress.addressType %></p>
                        <p class="mb-1 text-muted"><%= specificAddress.landMark %></p>
                        <p class="mb-1 text-muted">
                          <%= specificAddress.city %>, <%= specificAddress.state %> <%=
                          specificAddress.pincode %>
                        </p></div>
                </div>
            </div>

            <div class="info-card">
                <h2 class="card-title">Order Summary</h2>
                <div class="info-item">
                    <div class="info-label">Subtotal:</div>
                    <div class="info-value">₹<%= order.subtotal.toFixed(2)  %></div>
                </div>
                <% if (order.productdiscount>0) { %>
                <div class="info-item">
                    <div class="info-label">Product Discount:</div>
                    <div class="info-value negative-value">-₹<%= order.productdiscount.toFixed(2) %></div>
                </div>
                <% } %> <% if (order.couponDiscount > 0) { %>
                <div class="info-item">
                    <div class="info-label">Coupon Discount:</div>
                    <div class="info-value">-₹<%= order.couponDiscount.toFixed(2) %></div>
                </div>
                <% } %>
                <div class="info-item">
                    <div class="info-label">Total:</div>
                    <div class="info-value">₹<%= order.finalAmount.toFixed(2) %></div>
                </div>
            </div>
        </div>
            <div class="items-card">
                <table class="items-table">
                    <thead>
                        <tr>
                            <th>Item</th>
                            <th>Quantity</th>
                            <th>Price</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% order.orderedItems.forEach(item=> { %>
                            <tr>
                                <td>
                                    <%= item.products.productName %>
                                </td>
                                <td>
                                    <%= item.quantity %>
                                </td>
                                <td>₹<%= item.price.toFixed(2) %>
                                </td>
                                <td>
                                    <span class="status-badge status-<%= item.status.toLowerCase() %>">
                                        <%= item.status %>
                                    </span>
                                </td>
                                <td>
                                    <% if (item.status === 'Return request') { %>
                                        <button class="edit-status-btn approve-btn" onclick="approveReturn('<%= item._id %>')">
                                            Approve Return
                                        </button>
                                        <button class="edit-status-btn decline-btn" onclick="declineReturn('<%= item._id %>')">
                                            Decline Return
                                        </button>
                                    <% } else if (!['Cancelled', 'Returned', 'Return request'].includes(item.status)) { %>
                                        <button class="edit-status-btn" onclick="status('<%= item._id %>')">
                                            Edit Status
                                        </button>
                                    <% } %>
                                </td>
                            </tr>
                            <% }); %>
                    </tbody>
                </table>

                <% if (order.orderedItems.some((s) => s.cancelReason)) { %>
                    <div class="cancelled-section">
                        <div class="info-label">Cancelled Items:</div>
                        <% order.orderedItems.forEach(item=> { %>
                            <div>
                                <%= item.products.productName %>: <%= item.cancelReason %>
                            </div>
                            <% }); %>
                    </div>
                    <% } %>
                    <% if (order.orderedItems.some((s) => s.returnReason )) { %>
                    
                        <div class="returned-section">
                            <div class="info-label">Retruned Items:</div>

                            <% order.orderedItems.forEach(item=> { %>
                                <div>
                                    <%= item.products.productName %>: <%= item.returnReason %>
                                </div>
                                <% }); %>
                        </div>
                        <% } %>
    

                        <div class="total-amount">
                            Total: ₹<%= order.finalAmount.toFixed(2) %>
                        </div>
            </div>
        </div>

        <div id="status" class="modal">
            <div class="modal-content">
                <span class="close-modal" onclick="changeStatus()">&times;</span>
                <h2>Edit Status</h2>
                <br>
                <select id="statusSelect" class="status-select">
                    <option value="pending">Pending</option>
                    <option value="Processing">Processing</option>
                    <option value="Shipped">Shipped</option>
                    <option value="delivered">Delivered</option>
                    <option value="Cancelled">Cancelled</option>
                    <option value="Return request">Return Request</option>
                    <option value="Returned">Returned</option>
                </select>
                <br>
                <button class="save-status-btn" onclick="updateStatus()">Save Changes</button>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        let currentItemId = '';

        function status(itemId) {
            currentItemId = itemId;
            document.getElementById('status').style.display = 'block';
        }

        function changeStatus() {
            document.getElementById('status').style.display = 'none';
        }

        function updateStatus() {
            const newStatus = document.getElementById('statusSelect').value;

            fetch(`/admin/orders/update-status/${currentItemId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ status: newStatus })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Cannot change status of a cancelled or returned item');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Status Updated',
                        text: 'The order status has been successfully updated.',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        changeStatus();
                        location.reload();
                    });
                } else {
                    throw new Error(data.error || 'Error updating status');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Something went wrong. Please try again.',
                });
            });
        }

        window.onclick = function (event) {
            if (event.target == document.getElementById('status')) {
                changeStatus();
            }
        };

        function approveReturn(itemId) {
        Swal.fire({
            title: 'Confirm Return Approval',
            text: 'Are you sure you want to approve this return request?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, approve it'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/orders/approve-return/${itemId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => Promise.reject(err));
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: data.message || 'Return request approved successfully',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error(data.error || 'Error processing return');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.error || 'Something went wrong. Please try again.',
                    });
                });
            }
        });
    }

    function declineReturn(itemId) {
        Swal.fire({
            title: 'Confirm Return Decline',
            text: 'Are you sure you want to decline this return request?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, decline it'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/orders/decline-return/${itemId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    }
                })
                .then(response => {
                    if (!response.ok) {
                        return response.json().then(err => Promise.reject(err));
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: data.message || 'Return request declined successfully',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error(data.error || 'Error declining return');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: error.error || 'Something went wrong. Please try again.',
                    });
                });
            }
        });
    }
    </script>

    <%- include("../../views/partials/admin/footer") %>