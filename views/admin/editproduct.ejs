<%- include("../../views/partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
        <style>
            /* General Styles */

            .container {
                position: absolute;
                top: 70px;
                left: 240px;
                width: calc(100% - 240px);
                padding: 2rem;
            }

            h2.content-title {
                font-size: 28px;
                font-weight: 700;
                color: #2c3e50;
                margin-bottom: 0rem;
            }

            /* Form Styles */
            form {
                display: flex;
                flex-direction: column;
                gap: 1.5rem;
            }

            .form-label {
                font-weight: 600;
                margin-bottom: 0.5rem;
                color: #34495e;
            }

            .form-control,
            .form-select {
                width: 100%;
                padding: 0.75rem;
                font-size: 14px;
                border: 1px solid #ddd;
                border-radius: 8px;
                transition: border-color 0.3s ease, box-shadow 0.3s ease;
            }

            .form-control:focus,
            .form-select:focus {
                border-color: #3498db;
                outline: none;
                box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
            }

            .error-message {
                font-size: 12px;
                color: #e74c3c;
                margin-top: 0.5rem;
                display: none;
            }

            button {
                background-color: #3498db;
                color: #fff;
                padding: 0.75rem 1.5rem;
                border: none;
                border-radius: 8px;
                font-size: 14px;
                font-weight: 600;
                cursor: pointer;
                transition: background-color 0.3s ease, transform 0.2s ease;
            }

            button:hover {
                background-color: #2980b9;
                transform: translateY(-2px);
            }

            button:active {
                transform: translateY(0);
            }

            /* Card Styles */
            .card {
                border: 1px solid #e3e3e3;
                border-radius: 12px;
                overflow: hidden;
                margin-bottom: 1.5rem;
                background-color: #fff;
                transition: box-shadow 0.3s ease;
            }

            .card:hover {
                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            }

            .card-header {
                background-color: #f8f9fa;
                padding: 0.6rem;
                border-bottom: 1px solid #e3e3e3;
                font-weight: 600;
                color: #2c3e50;
            }

            .card-header h4 {
                margin: 0;
                font-size: 20px;
            }

            .card-body {
                padding: 1rem;
            }

            .image-container {
                position: relative;
                margin-bottom: 20px;
            }

            .cropper-preview {
                width: 100%;
                height: 300px;
                overflow: hidden;
                margin-bottom: 10px;
            }

            .cropper-container {
                max-width: 100%;
                height: 400px !important;
                margin-bottom: 10px;
                display: block !important;
            }

            .cropper-view-box,
            .cropper-face {
                display: block !important;
            }

            .cropper-canvas {
                display: block !important;
            }

            .cropper-modal {
                opacity: 0.5;
                display: block !important;
            }

            .btn-crop-actions {
                display: flex;
                justify-content: space-between;
                margin-top: 10px;
            }

            /* Image Cropper Styles */
            .image-cropper {
                display: none;
                /* Changed from display:none in inline style */
                border: 2px dashed #3498db;
                border-radius: 12px;
                padding: 1rem;
                margin: 1rem 0;
                background-color: #f8f9fa;
            }

            .image-preview {
                max-width: 100%;
                height: 300px;
                margin-bottom: 1rem;
            }

            .cropper-container {
                max-width: 100%;
                max-height: 400px;
            }

            /* Thumbnail Styles */
            .thumbnails-container {
                display: flex;
                gap: 1rem;
                padding: 1rem;
            }

            .thumbnail {
                position: relative;
                border: 1px solid #ddd;
                border-radius: 8px;
                overflow: hidden;
                width: 80px;
                height: 80px;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: transform 0.2s ease;
            }

            .thumbnail:hover {
                transform: scale(1.05);
            }

            .thumbnail img {
                max-width: 100%;
                max-height: 100%;
                border-radius: 8px;
            }

            .thumbnail .remove-icon {
                position: absolute;
                top: 5px;
                right: 5px;
                background-color: rgba(231, 76, 60, 0.8);
                color: #fff;
                border-radius: 50%;
                width: 20px;
                height: 20px;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                font-size: 12px;
                transition: background-color 0.3s ease;
            }

            .thumbnail .remove-icon:hover {
                background-color: #e74c3c;
            }

            /* Responsive Styles */
            @media (max-width: 768px) {
                .row {
                    flex-direction: column;
                }

                .col-lg-6,
                .col-lg-4 {
                    width: 100%;
                    max-width: 100%;
                }

                .form-control,
                .form-select {
                    width: 100%;
                }

                .image-cropper {
                    flex-direction: column;
                    text-align: center;
                }

                .image-cropper button {
                    margin: 1rem 0 0;
                }
            }
        </style>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    </head>

    <section class="container">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>
                </div>
            </div>
            <div class="col-lg-11">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <!-- Product Name -->
                            <div class="mb-1">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" name="productName" value="<%=product.productName%>"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>

                            <!-- Brand -->
                            <div class="col-lg-4 mb-1">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% brand.forEach(function(b) { %>
                                        <option value="<%=b.name%>" <%=b._id.toString()===product.brand._id.toString()
                                            ? 'selected' : '' %>>
                                            <%=b.name%>
                                        </option>
                                        <% }); %>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>

                            <!-- Description -->
                            <div class="mb-1">
                                <label class="form-label">Full description</label>
                                <textarea name="descriptionData" class="form-control border"
                                    rows="4"><%=product.description%></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>

                            <!-- Price and Quantity -->
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-1">
                                        <label class="form-label">Sale price</label>
                                        <input name="salePrice" type="number" value="<%= product.salePrice %>"
                                            class="form-control border" required>
                                        <div id="salePrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-1">
                                        <label class="form-label">Quantity</label>
                                        <input name="quantity" type="text" value="<%=product.quantity%>"
                                            class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- Category -->
                            <div class="card mb-1">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% cat.forEach(function(c) { %>
                                                    <option value="<%=c.name%>"
                                                        <%=c._id.toString()===product.category._id.toString()
                                                        ? 'selected' : '' %>>
                                                        <%=c.name%>
                                                    </option>
                                                    <% }); %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Image Upload -->
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="border row p-3">
                                    <div id="addedImagesContainer" class="thumbnails-container">
                                        <% for (let i=0; i < product.productImage.length; i++) { %>
                                            <div class="thumbnail">
                                                <img src="/uploads/productImages/<%= product.productImage[i] %>" alt="">
                                                <span class="remove-icon"
                                                    onclick="deleteSingleImage('<%= product.productImage[i] %>','<%= product._id %>')">&times;</span>
                                            </div>
                                            <% } %>
                                    </div>
                                </div>
                                <div id="images-error" class="error-message mx-3"></div>

                                <% for (let i=1; i <= 4; i++) { %>
                                    <% if (product.productImage.length < i) { %>
                                        <div class="card-body">
                                            <div class="image-container">
                                                <label class="form-label">Product Image <%= i %>
                                                        <%= i===1 ? '(Required)' : '' %></label>
                                                <input class="form-control" type="file" name="images" id="input<%= i %>"
                                                    accept="image/png, image/jpeg, image/jpg"
                                                    onchange="validateImageOnSelect(event, '<%= i %>')">

                                                <div class="image-cropper" id="cropper-container-<%= i %>">
                                                    <div class="cropper-preview">
                                                        <img src="" alt="" id="imgView<%= i %>"
                                                            style="max-width: 100%;">
                                                    </div>
                                                    <div class="btn-crop-actions">
                                                        <button type="button" class="btn btn-secondary"
                                                            onclick="cancelCrop('<%= i %>')">Cancel</button>
                                                        <button type="button" class="btn btn-primary"
                                                            id="saveButton<%= i %>">Save Crop</button>
                                                    </div>
                                                </div>

                                                <div class="mt-3" id="preview-container-<%= i %>" style="display:none;">
                                                    <p>Cropped Image:</p>
                                                    <img src="" id="croppedImg<%= i %>" alt="Cropped preview"
                                                        style="max-width: 100%; max-height: 200px;">
                                                </div>
                                            </div>
                                        </div>
                                        <% } %>
                                            <% } %>
                            </div>

                            <!-- Submit Button -->
                            <div>
                                <button class="btn-sm btn-primary" id="updatebtn" type="submit">Update</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        // Form Validation
        function validateForm() {
            console.log("Validating form...");
            clearErrorMessages();

            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementsByName('descriptionData')[0].value;
            const brand = document.getElementsByName('brand')[0].value;
            const salePrice = document.getElementsByName('salePrice')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const quantityInput = document.getElementsByName('quantity')[0];
            const quantity = quantityInput ? quantityInput.value : "";
            const image1 = document.getElementById('input1');
            const hasExistingImages = document.getElementById("imageDatas")?.value;

            let isValid = true;

            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            }

            if (description.trim() === '') {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            }

            if (quantity !== "" && (isNaN(parseInt(quantity)) || parseInt(quantity) < 0)) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            if (!/^\d+(\.\d{1,2})?$/.test(salePrice) || parseFloat(salePrice) < 0) {
                displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                isValid = false;
            }

            if (!hasExistingImages && image1 && image1.files.length === 0) {
                displayErrorMessage("images-error", 'Please select at least one image.');
                isValid = false;
            }

            console.log("Form validation result:", isValid);
            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            const errorElement = document.getElementById(elementId);
            if (errorElement) {
                errorElement.innerText = message;
                errorElement.style.display = "block";
                console.log(`Error displayed for ${elementId}: ${message}`);
            } else {
                console.log(`Error element not found: ${elementId}`);
            }
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
                element.style.display = "none";
            });
        }

        // Image Preview Functions
        function viewImage1(event) {
            document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage2(event) {
            document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage3(event) {
            document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0]);
        }

        function viewImage4(event) {
            document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0]);
        }

        // Image Cropper Functionality
        function viewImage(event, index) {
            const input = event.target;
            const cropperContainer = document.getElementById(`cropperContainer${index}`);
            const cropperImage = document.getElementById(`cropperImage${index}`);
            const previewImage = document.getElementById(`imgView${index}`);

            if (input.files && input.files[0]) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    // Set the source for both preview and cropper
                    previewImage.src = e.target.result;
                    cropperImage.src = e.target.result;

                    // Show cropper container
                    cropperContainer.style.display = 'block';

                    // Initialize cropper
                    if (cropperImage.cropperInstance) {
                        cropperImage.cropperInstance.destroy();
                    }

                    cropperImage.cropperInstance = new Cropper(cropperImage, {
                        aspectRatio: NaN,
                        viewMode: 1,
                        dragMode: 'move',
                        guides: true,
                        background: true,
                        autoCropArea: 0.8,
                        responsive: true,
                        zoomable: true,
                        scalable: true,
                        movable: true,
                        rotatable: true
                    });
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        function cancelCrop(index) {
            const cropperContainer = document.getElementById(`cropperContainer${index}`);
            const cropperImage = document.getElementById(`cropperImage${index}`);
            const previewImage = document.getElementById(`imgView${index}`);
            const input = document.getElementById(`input${index}`);

            // Clear the input
            input.value = '';

            // Clear the preview
            previewImage.src = '';

            // Hide cropper container
            cropperContainer.style.display = 'none';

            // Destroy cropper instance
            if (cropperImage.cropperInstance) {
                cropperImage.cropperInstance.destroy();
                delete cropperImage.cropperInstance;
            }
        }

        // Update the click handler for save buttons
        document.querySelectorAll('[id^="saveButton"]').forEach(button => {
            button.addEventListener('click', function () {
                const index = this.id.replace('saveButton', '');
                const cropperImage = document.getElementById(`cropperImage${index}`);

                if (cropperImage.cropperInstance) {
                    const canvas = cropperImage.cropperInstance.getCroppedCanvas({
                        maxWidth: 1000,
                        maxHeight: 1000,
                        fillColor: '#fff'
                    });

                    canvas.toBlob((blob) => {
                        const fileName = `cropped-${Date.now()}.png`;
                        const file = new File([blob], fileName, { type: 'image/png' });

                        // Update the file input
                        const input = document.getElementById(`input${index}`);
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(file);
                        input.files = dataTransfer.files;

                        // Update preview
                        const previewImage = document.getElementById(`imgView${index}`);
                        previewImage.src = canvas.toDataURL();

                        // Hide cropper
                        const cropperContainer = document.getElementById(`cropperContainer${index}`);
                        cropperContainer.style.display = 'none';

                        // Cleanup
                        cropperImage.cropperInstance.destroy();
                        delete cropperImage.cropperInstance;
                    }, 'image/png');
                }
            });
        });

        // Delete Single Image
        function deleteSingleImage(imageId, productId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You want to delete this image?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/admin/deleteImage",
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({
                            imageNameToserver: imageId,
                            productIdToServer: productId
                        }),
                        success: (response) => {
                            if (response.success) {
                                // Remove the image element from DOM
                                const imageElement = document.querySelector(`img[src="/uploads/productImages/${imageId}"]`);
                                if (imageElement) {
                                    imageElement.closest('.thumbnail').remove();
                                }
                                
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Deleted!',
                                    text: 'Image has been deleted successfully.',
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: response.message || 'Failed to delete image',
                                });
                            }
                        },
                        error: (xhr, status, error) => {
                            console.error("Error:", error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong. Please try again later.',
                            });
                        }
                    });
                }
            });
        }

        const selectedImages = [];
        const croppers = {};

        function validateImageOnSelect(event, inputNumber) {
            const errorElement = document.getElementById('images-error');
            errorElement.style.display = 'none';
            errorElement.innerText = '';

            const file = event.target.files[0];
            if (!file) return;

            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) {
                errorElement.innerText = 'Please select only JPG, JPEG, or PNG image files.';
                errorElement.style.display = 'block';
                event.target.value = '';
                document.getElementById(`imgView${inputNumber}`).src = '';
                return;
            }

            const maxSize = 5 * 1024 * 1024;
            if (file.size > maxSize) {
                errorElement.innerText = 'Image size should be less than 5MB.';
                errorElement.style.display = 'block';
                event.target.value = '';
                document.getElementById(`imgView${inputNumber}`).src = '';
                return;
            }

            viewImage(event, inputNumber);
        }

        function viewImage(event, index) {
            const input = event.target;
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const dataURL = e.target.result;
                    const image = document.getElementById(`imgView${index}`);
                    image.src = dataURL;

                    document.getElementById(`cropper-container-${index}`).style.display = 'block';

                    if (croppers[index]) {
                        croppers[index].destroy();
                    }

                    image.onload = function () {
                        croppers[index] = new Cropper(image, {
                            aspectRatio: NaN,
                            viewMode: 1,
                            dragMode: 'move',
                            guides: true,
                            background: true,
                            autoCropArea: 0.8,
                            zoomable: true,
                            scalable: true,
                            movable: true,
                            rotatable: true,
                            minContainerWidth: 300,
                            minContainerHeight: 300
                        });
                    };

                    document.getElementById(`saveButton${index}`).onclick = function () {
                        saveCroppedImage(index);
                    };
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        function saveCroppedImage(index) {
            if (!croppers[index]) {
                console.error(`Cropper ${index} not initialized`);
                return;
            }

            try {
                const croppedCanvas = croppers[index].getCroppedCanvas({
                    minWidth: 256,
                    minHeight: 256,
                    maxWidth: 4096,
                    maxHeight: 4096
                });

                if (!croppedCanvas) {
                    console.error('Could not get cropped canvas');
                    return;
                }

                const croppedImageDataURL = croppedCanvas.toDataURL('image/png');
                const croppedImg = document.getElementById(`croppedImg${index}`);
                croppedImg.src = croppedImageDataURL;

                document.getElementById(`preview-container-${index}`).style.display = 'block';

                croppedCanvas.toBlob((blob) => {
                    const timestamp = new Date().getTime();
                    const fileName = `cropped-image-${timestamp}-${index}.png`;
                    const file = new File([blob], fileName, { type: 'image/png' });

                    const dataTransfer = new DataTransfer();
                    dataTransfer.items.add(file);
                    document.getElementById(`input${index}`).files = dataTransfer.files;

                    document.getElementById(`cropper-container-${index}`).style.display = 'none';
                    addThumbnail(croppedImageDataURL, index);
                }, 'image/png', 0.9);

            } catch (error) {
                console.error('Error cropping image:', error);
            }
        }

        function cancelCrop(index) {
            if (croppers[index]) {
                croppers[index].destroy();
                croppers[index] = null;
            }

            document.getElementById(`input${index}`).value = '';
            document.getElementById(`cropper-container-${index}`).style.display = 'none';
            document.getElementById(`preview-container-${index}`).style.display = 'none';
        }

        function addThumbnail(imageSrc, index) {
            const container = document.getElementById('addedImagesContainer');

            const existingThumbnail = container.querySelector(`.thumbnail[data-index="${index}"]`);
            if (existingThumbnail) {
                existingThumbnail.querySelector('img').src = imageSrc;
                return;
            }

            const thumbnailDiv = document.createElement('div');
            thumbnailDiv.className = 'thumbnail';
            thumbnailDiv.dataset.index = index;

            const img = document.createElement('img');
            img.src = imageSrc;
            img.alt = `Product image ${index}`;

            const removeBtn = document.createElement('span');
            removeBtn.className = 'remove-icon';
            removeBtn.innerHTML = '&times;';
            removeBtn.onclick = function () {
                thumbnailDiv.remove();
                document.getElementById(`input${index}`).value = '';
                document.getElementById(`preview-container-${index}`).style.display = 'none';

                if (croppers[index]) {
                    croppers[index].destroy();
                    croppers[index] = null;
                }
            };

            thumbnailDiv.appendChild(img);
            thumbnailDiv.appendChild(removeBtn);
            container.appendChild(thumbnailDiv);
        }
    </script>

    <%- include("../../views/partials/admin/footer") %>