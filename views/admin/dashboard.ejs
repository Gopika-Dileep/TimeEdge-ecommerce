<%- include("../../views/partials/admin/header") %>

<style>
    .container {
        position: absolute;
        top: 70px;
        left: 240px;
        width: calc(100% - 240px);
        padding: 2rem;
    }
    @media (max-width: 1000px) {
        .container {
            position: absolute;
            top: 50px;
            left: 20px;
            width: calc(100% - 30px);
            padding: 2rem;
        }
    }
</style>
<div class="container">
    <!-- Dashboard Title -->
    <h1 class="dashboard-title text-center">Admin Dashboard</h1>

    <!-- Chart Section -->
    <div class="row mb-4">
        <!-- Sales Overview Chart -->
        <div class="col-lg-4">
            <div class="card p-4">
                <h4>Product Sales Overview</h4>
                <div class="chart-container">
                    <canvas id="productChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Category Sales Flow Chart -->
        <div class="col-lg-4">
            <div class="card p-4">
                <h4>Category Sales Overview</h4>
                <div class="chart-container">
                    <canvas id="categoryChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Brand Sales Chart -->
        <div class="col-lg-4">
            <div class="card p-4">
                <h4>Brand Sales Overview</h4>
                <div class="chart-container">
                    <canvas id="brandChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Dropdown -->
    <div class="d-flex justify-content-end mb-4">
        <select class="form-select select-filter" aria-label="Filter by" id="filter-data" onchange="filterData()">
            <option value="default">Default</option>
            <option value="daily">Daily</option>
            <option value="weekly">Weekly</option>
            <option value="monthly">Monthly</option>
            <option value="yearly">Yearly</option>
        </select>
    </div>

    <!-- Best Selling Products Section -->
    <div class="row mb-4">
        <div class="col-lg-4">
            <div class="card p-4">
                <h4>Top 10 Best Selling Products</h4>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">No</th>
                            <th scope="col">Product</th>
                            <th scope="col">Sold Count</th>
                        </tr>
                    </thead>
                    <tbody id="productList">
                        <% if (product) { %> 
                            <% product.forEach((item, index) => { %>   
                                <tr>
                                    <td><%= index + 1 %></td>
                                    <td><%= item.productName %></td>
                                    <td><span class="badge bg-primary rounded-pill"><%= item.totalOrder %> Items SOLD</span></td>
                                </tr>
                            <% }) %> 
                        <% } %>    
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Best Selling Categories Section -->
        <div class="col-lg-4">
            <div class="card p-4">
                <h4>Top 10 Best Selling Categories</h4>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">No</th>
                            <th scope="col">Category</th>
                            <th scope="col">Sold Count</th>
                        </tr>
                    </thead>
                    <tbody id="categoryList">
                        <% if (category) { %>
                            <% category.forEach((cat, index) => { %>   
                                <tr>
                                    <td><%= index + 1 %></td>
                                    <td><%= cat.categoryName %></td>
                                    <td><span class="badge bg-success rounded-pill"><%= cat.totalOrder %> Items SOLD</span></td>
                                </tr>
                            <% }) %> 
                        <% } %>    
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Best Selling Brands Section -->
        <div class="col-lg-4">
            <div class="card p-4">
                <h4>Top 10 Best Selling Brands</h4>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">No</th>
                            <th scope="col">Brand</th>
                            <th scope="col">Sold Count</th>
                        </tr>
                    </thead>
                    <tbody id="brandList">
                        <% if (brand) { %>
                            <% brand.forEach((b, index) => { %>   
                                <tr>
                                    <td><%= index + 1 %></td>
                                    <td><%= b.brandName %></td>
                                    <td><span class="badge bg-warning rounded-pill"><%= b.totalOrder %> Items SOLD</span></td>
                                </tr>
                            <% }) %> 
                        <% } %>    
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap and Chart.js Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Store dynamic chart values from the backend
    const productData = <%- JSON.stringify(productData) %>;
    const categoryData = <%- JSON.stringify(categoryData) %>;
    const brandData = <%- JSON.stringify(brandData) %>;

    // Product chart data dynamically
    const ctx = document.getElementById('productChart').getContext('2d');
    const productChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: productData.map(item => item.productName),
            datasets: [{
                label: 'Sales',
                data: productData.map(item => item.totalOrder),
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    // Category chart data dynamically
    const categoryCtx = document.getElementById('categoryChart').getContext('2d');
    const categoryChart = new Chart(categoryCtx, {
        type: 'doughnut',
        data: {
            labels: categoryData.map(item => item.categoryName), 
            datasets: [{
                label: 'Category Sales',
                data: categoryData.map(item => item.totalOrder),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(75, 192, 192, 0.6)',
                    'rgba(153, 102, 255, 0.6)',
                    'rgba(255, 159, 64, 0.6)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    // Brand chart data dynamically
    const brandCtx = document.getElementById('brandChart').getContext('2d');
    const brandChart = new Chart(brandCtx, {
        type: 'pie',
        data: {
            labels: brandData.map(item => item.brandName), 
            datasets: [{
                label: 'Brand Sales',
                data: brandData.map(item => item.totalOrder),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(75, 192, 192, 0.6)',
                    'rgba(153, 102, 255, 0.6)',
                    'rgba(255, 159, 64, 0.6)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

   // Continue from the previous script...

   async function filterData() {
        const filterValue = document.getElementById("filter-data").value;
        console.log("type:", filterValue)
        try {
            const response = await fetch(`/admin/filterData?filterValue=${filterValue}`)

            const data = await response.json()
            console.log("data:", data)

            if (data.products) {
                const productList = document.querySelector("#productList")
                productList.innerHTML = "";

                // Update products data
                data.products.forEach((pro, index) => {
                    productList.insertAdjacentHTML(
                        "beforeend",
                        `   <tr>
                            <td>${index + 1}</td>
                            <td>${pro.productName}</td>
                            <td><span class="badge bg-primary rounded-pill">${pro.totalOrder} Items SOLD</span></td>
                         </tr>
                    `);
                });

                // Update category data
                const categoryList = document.querySelector("#categoryList")
                categoryList.innerHTML = "";

                data.categories.forEach((cat, index) => {
                    categoryList.insertAdjacentHTML(
                        "beforeend",
                        `<tr>
                        <td>${index + 1}</td>
                        <td>${cat.categoryName}</td>
                        <td><span class="badge bg-success rounded-pill">${cat.totalOrder} Items SOLD</span></td>
                    </tr>
                    `);
                });

                // Update brand data
                const brandList = document.querySelector("#brandList")
                brandList.innerHTML = "";

                data.brands.forEach((b, index) => {
                    brandList.insertAdjacentHTML(
                        "beforeend",
                        `<tr>
                        <td>${index + 1}</td>
                        <td>${b.brandName}</td>
                        <td><span class="badge bg-warning rounded-pill">${b.totalOrder} Items SOLD</span></td>
                    </tr>
                    `);
                });

                // Update chart data
                productChartData(data.productData)
                categoryChartData(data.categoryData)
                brandChartData(data.brandData)
            }
        } catch (error) {
            console.error('Error in fetching filter data product, category, and brand', error);
        }
    }

    // Update product chart
    function productChartData(productData) {
        productChart.data.labels = productData.map(item => item.productName);
        productChart.data.datasets[0].data = productData.map(item => item.totalOrder);
        productChart.update()
    }

    // Update category chart
    function categoryChartData(categoryData) {
        categoryChart.data.labels = categoryData.map(item => item.categoryName);
        categoryChart.data.datasets[0].data = categoryData.map(item => item.totalOrder);
        categoryChart.update()
    }

    // Update brand chart
    function brandChartData(brandData) {
        brandChart.data.labels = brandData.map(item => item.brandName);
        brandChart.data.datasets[0].data = brandData.map(item => item.totalOrder);
        brandChart.update()
    }
</script>

<%- include("../../views/partials/admin/footer") %>