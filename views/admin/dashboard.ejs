<%- include("../../views/partials/admin/header") %>

<style>
    .container {
        position: absolute;
        top: 70px;
        left: 240px;
        width: calc(100% - 240px);
        padding: 2rem;
    }

    .filter-container {
        background: #fff;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        width: fit-content;
        margin-left: auto;
        margin-bottom: 20px;
    }

    .select-filter {
        width: auto !important; 
        min-width: 120px;
        height: 35px;
        font-size: 14px;
    }

    .dashboard-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
        margin-bottom: 20px;
    }

    .dashboard-card {
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 20px;
        height: 100%;
    }

    .summary-cards {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
        margin-bottom: 20px;
    }

    .summary-card {
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        padding: 20px;
    }

    .icon-container {
        width: 48px;
        height: 48px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 10px;
    }

    .bg-light-green {
        background-color: rgba(0, 255, 0, 0.1);
    }

    .bg-light-blue {
        background-color: rgba(0, 0, 255, 0.1);
    }

    .bg-light-orange {
        background-color: rgba(255, 165, 0, 0.1);
    }

    .bg-light-red {
        background-color: rgba(255, 0, 0, 0.1);
    }

    @media (max-width: 1000px) {
        .container {
            position: absolute;
            top: 50px;
            left: 20px;
            width: calc(100% - 30px);
            padding: 1rem;
        }
        
        .dashboard-grid {
            grid-template-columns: 1fr;
        }

        .summary-cards {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @media (max-width: 576px) {
        .summary-cards {
            grid-template-columns: 1fr;
        }
    }
</style>

<div class="container">
    <h1 class="dashboard-title text-center mb-4">Admin Dashboard</h1>

    <div class="filter-container">
        <select class="form-select select-filter" aria-label="Filter by" id="filter-data" onchange="filterData()">
            <option value="default">Default</option>
            <option value="daily">Daily</option>
            <option value="weekly">Weekly</option>
            <option value="monthly">Monthly</option>
            <option value="yearly">Yearly</option>
        </select>
    </div>

    <div class="summary-cards">
        <div class="summary-card">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="icon-container bg-light-green">
                    <i class="fas fa-rupee-sign text-success"></i>
                </div>
            </div>
            <h6 class="text-muted">Total Revenue</h6>
            <h3 class="mb-2" id="totalRevenue">â‚¹<%= totalRevenue.toFixed(2) %></h3>
        </div>

        <div class="summary-card">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="icon-container bg-light-blue">
                    <i class="fas fa-users text-primary"></i>
                </div>
            </div>
            <h6 class="text-muted">New Customers</h6>
            <h3 class="mb-2" id="newCustomers">+<%= newUsersCount %></h3>
        </div>

        <div class="summary-card">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="icon-container bg-light-orange">
                    <i class="fas fa-shopping-cart text-warning"></i>
                </div>
            </div>
            <h6 class="text-muted">Sales</h6>
            <h3 class="mb-2" id="totalSales">+<%= salesData %></h3>
        </div>

        <div class="summary-card">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="icon-container bg-light-red">
                    <i class="fas fa-times-circle text-danger"></i>
                </div>
            </div>
            <h6 class="text-muted">Cancelled Orders</h6>
            <h3 class="mb-2" id="cancelledOrders">+<%= cancelledCount %></h3>
        </div>
    </div>

    <div class="dashboard-grid">
        <div class="dashboard-card">
            <h4>Product Sales Overview</h4>
            <div class="chart-container">
                <canvas id="productChart"></canvas>
            </div>
        </div>

        <div class="dashboard-card">
            <h4>Category Sales Overview</h4>
            <div class="chart-container">
                <canvas id="categoryChart"></canvas>
            </div>
        </div>

        <div class="dashboard-card">
            <h4>Brand Sales Overview</h4>
            <div class="chart-container">
                <canvas id="brandChart"></canvas>
            </div>
        </div>

        <div class="dashboard-card">
            <h4>User Registration Overview</h4>
            <div class="chart-container">
                <canvas id="userChart"></canvas>
            </div>
        </div>
    </div>

    <div class="dashboard-grid">
        <div class="dashboard-card">
            <h4>Top Best Selling Products</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">No</th>
                        <th scope="col">Product</th>
                        <th scope="col">Sold Count</th>
                    </tr>
                </thead>
                <tbody id="productList">
                    <% if (product) { %> 
                        <% product.forEach((item, index) => { %>   
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= item.productName %></td>
                                <td><span class="badge bg-primary rounded-pill"><%= item.totalOrder %> Items SOLD</span></td>
                            </tr>
                        <% }) %> 
                    <% } %>    
                </tbody>
            </table>
        </div>

        <div class="dashboard-card">
            <h4>Top Best Selling Categories</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">No</th>
                        <th scope="col">Category</th>
                        <th scope="col">Sold Count</th>
                    </tr>
                </thead>
                <tbody id="categoryList">
                    <% if (category) { %>
                        <% category.forEach((cat, index) => { %>   
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= cat.categoryName %></td>
                                <td><span class="badge bg-success rounded-pill"><%= cat.totalOrder %> Items SOLD</span></td>
                            </tr>
                        <% }) %> 
                    <% } %>    
                </tbody>
            </table>
        </div>

        <div class="dashboard-card">
            <h4>Top Best Selling Brands</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">No</th>
                        <th scope="col">Brand</th>
                        <th scope="col">Sold Count</th>
                    </tr>
                </thead>
                <tbody id="brandList">
                    <% if (brand) { %>
                        <% brand.forEach((b, index) => { %>   
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= b.brandName %></td>
                                <td><span class="badge bg-warning rounded-pill"><%= b.totalOrder %> Items SOLD</span></td>
                            </tr>
                        <% }) %> 
                    <% } %>    
                </tbody>
            </table>
        </div>

        <div class="dashboard-card">
            <h4>Recent User Registrations</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">No</th>
                        <th scope="col">Date</th>
                        <th scope="col">Users</th>
                    </tr>
                </thead>
                <tbody id="userList">
                    <% if (users) { %>
                        <% users.forEach((user, index) => { %>   
                            <tr>
                                <td><%= index + 1 %></td>
                                <td><%= user._id %></td>
                                <td><span class="badge bg-info rounded-pill"><%= user.count %> Users</span></td>
                            </tr>
                        <% }) %> 
                    <% } %>    
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://kit.fontawesome.com/your-font-awesome-kit.js"></script>
<div id="productData" data-value='<%- JSON.stringify(productData) %>' style="display: none;"></div>
<div id="categoryData" data-value='<%- JSON.stringify(categoryData) %>' style="display: none;"></div>
<div id="brandData" data-value='<%- JSON.stringify(brandData) %>' style="display: none;"></div>
<div id="userData" data-value='<%- JSON.stringify(userData) %>' style="display: none;"></div>

<script>
    const productData = JSON.parse(document.getElementById('productData').dataset.value);
    const categoryData = JSON.parse(document.getElementById('categoryData').dataset.value);
    const brandData = JSON.parse(document.getElementById('brandData').dataset.value);
    const userData = JSON.parse(document.getElementById('userData').dataset.value);

    const ctx = document.getElementById('productChart').getContext('2d');
    const productChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: productData.map(item => item.productName),
            datasets: [{
                label: 'Sales',
                data: productData.map(item => item.totalOrder),
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    const categoryCtx = document.getElementById('categoryChart').getContext('2d');
    const categoryChart = new Chart(categoryCtx, {
        type: 'doughnut',
        data: {
            labels: categoryData.map(item => item.categoryName),
            datasets: [{
                label: 'Category Sales',
                data: categoryData.map(item => item.totalOrder),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(75, 192, 192, 0.6)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    const brandCtx = document.getElementById('brandChart').getContext('2d');
    const brandChart = new Chart(brandCtx, {
        type: 'pie',
        data: {
            labels: brandData.map(item => item.brandName),
            datasets: [{
                label: 'Brand Sales',
                data: brandData.map(item => item.totalOrder),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(75, 192, 192, 0.6)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    const userCtx = document.getElementById('userChart').getContext('2d');
    const userChart = new Chart(userCtx, {
        type: 'line',
        data: {
            labels: userData.map(item => item.date),
            datasets: [{
                label: 'New Users',
                data: userData.map(item => item.count),
                backgroundColor: 'rgba(75, 192, 192, 0.6)',
                borderColor: 'rgba(75, 192, 192, 1)',
                borderWidth: 2,
                tension: 0.1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        stepSize: 1
                    }
                }
            }
        }
    });
    async function filterData() {
    const filterValue = document.getElementById("filter-data").value;
    try {
        const response = await fetch(`/admin/filterData?filterValue=${filterValue}`);
        const data = await response.json();
        
        if (data) {
            document.getElementById("totalRevenue").textContent = `â‚¹${data.totalRevenue.toFixed(2)}`;
            document.getElementById("newCustomers").textContent = `+${data.newUsersCount}`;
            document.getElementById("totalSales").textContent = `+${data.salesData}`;
            document.getElementById("cancelledOrders").textContent = `+${data.cancelledCount}`;
            
            const productList = document.getElementById("productList");
            productList.innerHTML = data.products.map((pro, index) => `
                <tr>
                    <td>${index + 1}</td>
                    <td>${pro.productName}</td>
                    <td><span class="badge bg-primary rounded-pill">${pro.totalOrder} Items SOLD</span></td>
                </tr>
            `).join('');

            const categoryList = document.getElementById("categoryList");
            categoryList.innerHTML = data.categories.map((cat, index) => `
                <tr>
                    <td>${index + 1}</td>
                    <td>${cat.categoryName}</td>
                    <td><span class="badge bg-success rounded-pill">${cat.totalOrder} Items SOLD</span></td>
                </tr>
            `).join('');

            const brandList = document.getElementById("brandList");
            brandList.innerHTML = data.brands.map((b, index) => `
                <tr>
                    <td>${index + 1}</td>
                    <td>${b.brandName}</td>
                    <td><span class="badge bg-warning rounded-pill">${b.totalOrder} Items SOLD</span></td>
                </tr>
            `).join('');

            const userList = document.getElementById("userList");
            userList.innerHTML = data.users.map((user, index) => `
                <tr>
                    <td>${index + 1}</td>
                    <td>${user._id}</td>
                    <td><span class="badge bg-info rounded-pill">${user.count} Users</span></td>
                </tr>
            `).join('');

            productChart.data.labels = data.productData.map(item => item.productName);
            productChart.data.datasets[0].data = data.productData.map(item => item.totalOrder);
            productChart.update();

            categoryChart.data.labels = data.categoryData.map(item => item.categoryName);
            categoryChart.data.datasets[0].data = data.categoryData.map(item => item.totalOrder);
            categoryChart.update();

            brandChart.data.labels = data.brandData.map(item => item.brandName);
            brandChart.data.datasets[0].data = data.brandData.map(item => item.totalOrder);
            brandChart.update();

            userChart.data.labels = data.userData.map(item => item.date);
            userChart.data.datasets[0].data = data.userData.map(item => item.count);
            userChart.update();
        }
    } catch (error) {
        console.error('Error in fetching filter data:', error);
    }
}
</script>

<%- include("../../views/partials/admin/footer") %>