<%- include("../../views/partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f9f9f9;
                margin: 0;
                padding: 0;
            }

            .content-main {
                padding: 20px;
                max-width: 1200px;
                margin: 0 auto;
                background-color: #fff;
                border-radius: 8px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }

            .content-header {
                margin-bottom: 20px;
            }

            h2.content-title {
                font-size: 24px;
                font-weight: bold;
                color: #333;
            }

            form {
                display: flex;
                flex-direction: column;
            }

            .form-label {
                font-weight: bold;
                margin-bottom: 8px;
                color: #555;
            }

            .form-control {
                width: 100%;
                padding: 10px;
                font-size: 14px;
                border: 1px solid #ccc;
                border-radius: 5px;
                transition: border-color 0.3s ease;
            }

            .form-control:focus {
                border-color: #007bff;
                outline: none;
            }

            .error-message {
                font-size: 12px;
                color: red;
                margin-top: 5px;
                display: none;
            }

            .form-select {
                padding: 10px;
                font-size: 14px;
                border: 1px solid #ccc;
                border-radius: 5px;
            }

            button {
                background-color: #007bff;
                color: #fff;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                font-size: 14px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

            button:hover {
                background-color: #0056b3;
            }

            .card {
                border: 1px solid #e3e3e3;
                border-radius: 8px;
                overflow: hidden;
                margin-bottom: 20px;
                background-color: #fff;
            }

            .card-header {
                background-color: #f5f5f5;
                padding: 10px 15px;
                border-bottom: 1px solid #e3e3e3;
                font-weight: bold;
                color: #333;
            }

            .card-body {
                padding: 15px;
            }

            .thumbnails-container {
                display: flex;
                flex-wrap: wrap;
                gap: 10px;
                margin-bottom: 15px;
            }

            img {
                max-width: 100%;
                border-radius: 5px;
            }

            .image-cropper {
                border: 1px dashed #007bff;
                border-radius: 5px;
                justify-content: center;
                align-items: center;
                padding: 10px;
                background-color: #f5f5f5;
            }

            @media (max-width: 768px) {
                .row {
                    flex-direction: column;
                }

                .col-lg-6,
                .col-lg-4 {
                    width: 100%;
                }

                .form-select,
                .form-control {
                    width: 100%;
                }
            }

            .error-message {
                color: red;
                font-size: 12px;
                margin-top: 5px;
                display: none;
            }

            .thumbnails-container {
                display: flex;
                overflow-x: auto;
            }

            .thumbnail {
                margin-right: 10px;
            }

            .content-main {
                position: absolute;
                top: 70px;
                left: 240px;
                width: calc(100% - 240px);
                padding: 2rem;
            }

            @media (max-width: 1000px) {
                .content-main {
                    position: absolute;
                    top: 50px;
                    left: 20px;
                    width: calc(100% - 30px);
                    padding: 2rem;
                }
            }
        </style>
    </head>

    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" action="/admin/addProducts" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for(let i=0; i < brand.length; i++) { %>
                                        <option value="<%= brand[i].name %>">
                                            <%= brand[i].name %>
                                        </option>
                                    <% } %>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                    class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="â‚¹" name="salePrice" type="text" class="form-control border">
                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% for(let i=0; i < cat.length; i++) { %>
                                                    <option value="<%= cat[i].name %>">
                                                        <%= cat[i].name %>
                                                    </option>
                                                <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="border row">
                                    <div id="addedImagesContainer" class="thumbnails-container"></div>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView1">
                                        <input class="form-control" type="file" name="images" id="input1" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="validateImageOnSelect(event, 1)">
                                        <div id="images-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg1" alt="">
                                        <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView2">
                                        <input class="form-control" type="file" name="images" id="input2" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="validateImageOnSelect(event, 2)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg2" alt="">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView3">
                                        <input class="form-control" type="file" name="images" id="input3" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="validateImageOnSelect(event, 3)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg3" alt="">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView4">
                                        <input class="form-control" type="file" name="images" id="input4" 
                                            accept="image/png, image/jpeg, image/jpg" 
                                            onchange="validateImageOnSelect(event, 4)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg4" alt="">
                                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                            </div>
                    </div>
                    <div>
                        <button class="btn btn-md rounded font-sm hover-up" type="submit" onclick="validateForm()">Publish</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
    <script>
        function validateImageOnSelect(event, inputNumber) {
            const errorElement = document.getElementById('images-error');
            errorElement.style.display = 'none';
            errorElement.innerText = '';

            const file = event.target.files[0];
            
            if (!file) return;

            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) {
                errorElement.innerText = 'Please select only JPG, JPEG, or PNG image files.';
                errorElement.style.display = 'block';
                event.target.value = '';
                document.getElementById(`imgView${inputNumber}`).src = '';
                return;
            }

            const maxSize = 5 * 1024 * 1024; 
            if (file.size > maxSize) {
                errorElement.innerText = 'Image size should be less than 5MB.';
                errorElement.style.display = 'block';
                event.target.value = '';
                document.getElementById(`imgView${inputNumber}`).src = '';
                return;
            }

            viewImage(event, inputNumber);
        }

        function viewImage(event, index) {
            const input = event.target;
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function () {
                    const dataURL = reader.result;
                    const image = document.getElementById("imgView" + index);
                    image.src = dataURL;

                    if (image.cropperInstance) {
                        image.cropperInstance.destroy();
                    }

                    image.cropperInstance = new Cropper(image, {
                        aspectRatio: NaN,
                        viewMode: 1,
                        dragMode: 'move',
                        guides: true,
                        background: true,
                        autoCropArea: 0.8,
                        zoomable: true,
                        scalable: true,
                        movable: true,
                        rotatable: true,
                        minContainerWidth: 300,
                        minContainerHeight: 300,
                    });

                    const cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
                    cropperContainer.style.display = "block";

                    const saveButton = document.querySelector("#saveButton" + index);
                    saveButton.addEventListener(
                        "click",
                        function saveHandler() {
                            const croppedCanvas = image.cropperInstance.getCroppedCanvas();
                            if (!croppedCanvas) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'Could not crop the image. Try again.',
                                    confirmButtonText: 'OK'
                                });
                                return;
                            }

                            const croppedImage = document.getElementById("croppedImg" + index);
                            croppedImage.src = croppedCanvas.toDataURL("image/jpeg", 1.0);

                            const timestamp = new Date().getTime();
                            const fileName = `cropped-img-${timestamp}-${index}.png`;

                            croppedCanvas.toBlob((blob) => {
                                if (!blob) {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Could not create image blob. Try again.',
                                        confirmButtonText: 'OK'
                                    });
                                    return;
                                }

                                const fileInput = document.getElementById("input" + index);
                                const file = new File([blob], fileName, { type: "image/png" });

                                const dataTransfer = new DataTransfer();
                                dataTransfer.items.add(file);
                                fileInput.files = dataTransfer.files;

                                console.log(`Cropped image saved as: ${fileName}`);

                                cropperContainer.style.display = "none";
                                image.cropperInstance.destroy();
                                delete image.cropperInstance;
                            }, "image/png");
                        },
                        { once: true }
                    );
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        function handleFileSelect(event) {
            const addedImagesContainer = document.getElementById("addedImagesContainer");
            addedImagesContainer.innerHTML = "";
            const files = event.target.files;

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                selectedImages.push(file);

                const thumbnail = document.createElement("div");
                thumbnail.classList.add("thumbnail");

                const img = document.createElement("img");
                img.src = URL.createObjectURL(file);
                img.alt = "thumbnail";
                img.style.width = "50px";
                img.style.height = "auto";

                const removeIcon = document.createElement("span");
                removeIcon.classList.add("remove-icon");
                removeIcon.innerHTML = "&times;";
                removeIcon.addEventListener("click", function () {
                    const index = selectedImages.indexOf(file);
                    if (index !== -1) {
                        selectedImages.splice(index, 1);
                    }
                    thumbnail.remove();
                });

                thumbnail.appendChild(img);
                thumbnail.appendChild(removeIcon);
                addedImagesContainer.appendChild(thumbnail);
            }
        }

        function validateImageFile(file) {
            if (!file) return false;
            
            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) return false;
            
            const maxSize = 5 * 1024 * 1024;
            if (file.size > maxSize) return false;
            
            return true;
        }

        function validateForm() {
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementById('descriptionid').value;
            const brand = document.getElementsByName('brand')[0].value;
            const saleprice = document.getElementsByName('salePrice')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const images = document.getElementById('input1');
            const quantity = document.getElementsByName('quantity')[0].value;
            let isValid = true;

            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            } else if (!/^[a-zA-Z\s;,.]+$/.test(name.trim())) {
                displayErrorMessage('productName-error', 'Product name can only contain letters, spaces, and the following characters: ; , .');
                isValid = false;
            }

            if (description.trim() === "") {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            } else if (!/^[a-zA-Z0-9\s;:"._-]+$/.test(description.trim())) {
                displayErrorMessage('description-error', 'Product description can only contain letters, numbers, spaces, and the following characters: ; : " . _ -');
                isValid = false;
            }

            if (parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            const sanitizedSalePrice = saleprice.trim().replace(/,/g, '');
            if (
                !/^\d{4,6}(\.\d{1,2})?$/.test(sanitizedSalePrice) ||
                parseFloat(sanitizedSalePrice) < 1000 ||
                parseFloat(sanitizedSalePrice) > 100000
            ) {
                displayErrorMessage(
                    'salePrice-error',
                    `Please enter a valid sale price between 1,000 and 100,000. You entered: ${saleprice}`
                );
                isValid = false;
            }

            if (images.files.length === 0) {
                displayErrorMessage("images-error", 'Please select at least one image.');
                isValid = false;
            } else if (!validateImageFile(images.files[0])) {
                displayErrorMessage("images-error", 'Please select a valid image file (JPG, JPEG, or PNG) under 5MB.');
                isValid = false;
            }

            const additionalImages = [
                document.getElementById('input2'),
                document.getElementById('input3'),
                document.getElementById('input4')
            ];

            for (let i = 0; i < additionalImages.length; i++) {
                if (additionalImages[i].files.length > 0 && !validateImageFile(additionalImages[i].files[0])) {
                    displayErrorMessage(`images-error`, 'All images must be valid image files (JPG, JPEG, or PNG) under 5MB.');
                    isValid = false;
                    break;
                }
            }

            return isValid;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
                element.style.display = 'none';
            });
        }
    </script>

<%- include("../../views/partials/admin/footer") %>