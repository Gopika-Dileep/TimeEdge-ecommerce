<%- include("../../views/partials/admin/header") %>

    <head>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css">
        <style>
            body {
                font-family: Arial, sans-serif;
                background-color: #f9f9f9;
                margin: 0;
                padding: 0;
            }

            .content-main {
                padding: 20px;
                max-width: 1200px;
                margin: 0 auto;
                background-color: #fff;
                border-radius: 8px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            }

            .content-header {
                margin-bottom: 20px;
            }

            h2.content-title {
                font-size: 24px;
                font-weight: bold;
                color: #333;
            }

            form {
                display: flex;
                flex-direction: column;
            }

            .form-label {
                font-weight: bold;
                margin-bottom: 8px;
                color: #555;
            }

            .form-control {
                width: 100%;
                padding: 10px;
                font-size: 14px;
                border: 1px solid #ccc;
                border-radius: 5px;
                transition: border-color 0.3s ease;
            }

            .form-control:focus {
                border-color: #007bff;
                outline: none;
            }

            .error-message {
                font-size: 12px;
                color: red;
                margin-top: 5px;
                display: none;
            }

            .form-select {
                padding: 10px;
                font-size: 14px;
                border: 1px solid #ccc;
                border-radius: 5px;
            }

            button {
                background-color: #007bff;
                color: #fff;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                font-size: 14px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

            button:hover {
                background-color: #0056b3;
            }

            .card {
                border: 1px solid #e3e3e3;
                border-radius: 8px;
                overflow: hidden;
                margin-bottom: 20px;
                background-color: #fff;
            }

            .card-header {
                background-color: #f5f5f5;
                padding: 10px 15px;
                border-bottom: 1px solid #e3e3e3;
                font-weight: bold;
                color: #333;
            }

            .card-body {
                padding: 15px;
            }

            .thumbnails-container {
                display: flex;
                flex-wrap: wrap;
                gap: 10px;
                margin-bottom: 15px;
            }

            .thumbnail {
                position: relative;
                margin-right: 10px;
            }

            .thumbnail img {
                width: 80px;
                height: 80px;
                object-fit: cover;
                border-radius: 4px;
                border: 1px solid #ddd;
            }

            .remove-icon {
                position: absolute;
                top: -8px;
                right: -8px;
                background: red;
                color: white;
                width: 20px;
                height: 20px;
                border-radius: 50%;
                text-align: center;
                line-height: 18px;
                font-size: 14px;
                cursor: pointer;
            }

            .image-container {
                position: relative;
                margin-bottom: 20px;
            }

            .img-preview {
                width: 100%;
                max-height: 300px;
                display: block;
                margin-bottom: 10px;
                border-radius: 5px;
            }

            .image-cropper {
                width: 100%;
                max-width: 600px;
                margin: 0 auto 20px auto;
                display: none;
                border: 1px solid #ddd;
                background-color: #f8f8f8;
                padding: 10px;
                border-radius: 5px;
            }

            .cropper-preview {
                width: 100%;
                height: 300px;
                overflow: hidden;
                margin-bottom: 10px;
            }


            .cropper-container {
                max-width: 100%;
                height: 400px !important;
                margin-bottom: 10px;
                display: block !important;
            }


            .cropper-view-box,
            .cropper-face {
                display: block !important;
            }

            .cropper-canvas {
                display: block !important;
            }


            .cropper-modal {
                opacity: 0.5;
                display: block !important;
            }

            .btn-crop-actions {
                display: flex;
                justify-content: space-between;
                margin-top: 10px;
            }

            @media (max-width: 768px) {
                .row {
                    flex-direction: column;
                }

                .col-lg-6,
                .col-lg-4 {
                    width: 100%;
                }

                .form-select,
                .form-control {
                    width: 100%;
                }
            }

            .content-main {
                position: absolute;
                top: 70px;
                left: 240px;
                width: calc(100% - 240px);
                padding: 2rem;
            }

            @media (max-width: 1000px) {
                .content-main {
                    position: absolute;
                    top: 50px;
                    left: 20px;
                    width: calc(100% - 30px);
                    padding: 2rem;
                }
            }
        </style>
    </head>

    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Add New Product</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form method="post" id="productForm" action="/admin/addProducts" enctype="multipart/form-data"
                            onsubmit="return validateForm()">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" placeholder="Type here" name="productName"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select border" name="brand">
                                    <% for(let i=0; i < brand.length; i++) { %>
                                        <option value="<%= brand[i].name %>">
                                            <%= brand[i].name %>
                                        </option>
                                        <% } %>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea placeholder="Type here" id="descriptionid" name="description"
                                    class="form-control border" rows="4"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input placeholder="â‚¹" name="salePrice" type="text" class="form-control border">
                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input placeholder="" name="quantity" type="text" class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-4">
                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% for(let i=0; i < cat.length; i++) { %>
                                                    <option value="<%= cat[i].name %>">
                                                        <%= cat[i].name %>
                                                    </option>
                                                    <% } %>
                                            </select>
                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <div class="border row p-3">
                                    <div id="addedImagesContainer" class="thumbnails-container"></div>
                                </div>
                                <div id="images-error" class="error-message mx-3"></div>


                                <div class="card-body">
                                    <div class="image-container">
                                        <label class="form-label">Product Image 1 (Required)</label>
                                        <input class="form-control" type="file" name="images" id="input1"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="validateImageOnSelect(event, 1)">

                                        <div class="image-cropper" id="cropper-container-1">
                                            <div class="cropper-preview">
                                                <img src="" alt="" id="imgView1" style="max-width: 100%;">
                                            </div>
                                            <div class="btn-crop-actions">
                                                <button type="button" class="btn btn-secondary"
                                                    onclick="cancelCrop(1)">Cancel</button>
                                                <button type="button" class="btn btn-primary" id="saveButton1">Save
                                                    Crop</button>
                                            </div>
                                        </div>

                                        <div class="mt-3" id="preview-container-1" style="display:none;">
                                            <p>Cropped Image:</p>
                                            <img src="" id="croppedImg1" alt="Cropped preview"
                                                style="max-width: 100%; max-height: 200px;">
                                        </div>
                                    </div>
                                </div>


                                <div class="card-body">
                                    <div class="image-container">
                                        <label class="form-label">Product Image 2</label>
                                        <input class="form-control" type="file" name="images" id="input2"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="validateImageOnSelect(event, 2)">

                                        <div class="image-cropper" id="cropper-container-2">
                                            <div class="cropper-preview">
                                                <img src="" alt="" id="imgView2" style="max-width: 100%;">
                                            </div>
                                            <div class="btn-crop-actions">
                                                <button type="button" class="btn btn-secondary"
                                                    onclick="cancelCrop(2)">Cancel</button>
                                                <button type="button" class="btn btn-primary" id="saveButton2">Save
                                                    Crop</button>
                                            </div>
                                        </div>

                                        <div class="mt-3" id="preview-container-2" style="display:none;">
                                            <p>Cropped Image:</p>
                                            <img src="" id="croppedImg2" alt="Cropped preview"
                                                style="max-width: 100%; max-height: 200px;">
                                        </div>
                                    </div>
                                </div>


                                <div class="card-body">
                                    <div class="image-container">
                                        <label class="form-label">Product Image 3 </label>
                                        <input class="form-control" type="file" name="images" id="input3"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="validateImageOnSelect(event, 3)">

                                        <div class="image-cropper" id="cropper-container-3">
                                            <div class="cropper-preview">
                                                <img src="" alt="" id="imgView3" style="max-width: 100%;">
                                            </div>
                                            <div class="btn-crop-actions">
                                                <button type="button" class="btn btn-secondary"
                                                    onclick="cancelCrop(3)">Cancel</button>
                                                <button type="button" class="btn btn-primary" id="saveButton3">Save
                                                    Crop</button>
                                            </div>
                                        </div>

                                        <div class="mt-3" id="preview-container-3" style="display:none;">
                                            <p>Cropped Image:</p>
                                            <img src="" id="croppedImg3" alt="Cropped preview"
                                                style="max-width: 100%; max-height: 200px;">
                                        </div>
                                    </div>
                                </div>


                                <div class="card-body">
                                    <div class="image-container">
                                        <label class="form-label">Product Image 4 </label>
                                        <input class="form-control" type="file" name="images" id="input4"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="validateImageOnSelect(event, 4)">

                                        <div class="image-cropper" id="cropper-container-4">
                                            <div class="cropper-preview">
                                                <img src="" alt="" id="imgView4" style="max-width: 100%;">
                                            </div>
                                            <div class="btn-crop-actions">
                                                <button type="button" class="btn btn-secondary"
                                                    onclick="cancelCrop(4)">Cancel</button>
                                                <button type="button" class="btn btn-primary" id="saveButton4">Save
                                                    Crop</button>
                                            </div>
                                        </div>

                                        <div class="mt-3" id="preview-container-4" style="display:none;">
                                            <p>Cropped Image:</p>
                                            <img src="" id="croppedImg4" alt="Cropped preview"
                                                style="max-width: 100%; max-height: 200px;">
                                        </div>
                                    </div>
                                </div>
                            </div>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-md rounded font-sm hover-up" type="submit">Publish</button>
                    </div>
                    </form>
                </div>
            </div>
        </div>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        const selectedImages = [];
        const croppers = {};

        function validateImageOnSelect(event, inputNumber) {
            const errorElement = document.getElementById('images-error');
            errorElement.style.display = 'none';
            errorElement.innerText = '';

            const file = event.target.files[0];

            if (!file) return;

            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) {
                errorElement.innerText = 'Please select only JPG, JPEG, or PNG image files.';
                errorElement.style.display = 'block';
                event.target.value = '';
                document.getElementById(`imgView${inputNumber}`).src = '';
                return;
            }

            const maxSize = 5 * 1024 * 1024;
            if (file.size > maxSize) {
                errorElement.innerText = 'Image size should be less than 5MB.';
                errorElement.style.display = 'block';
                event.target.value = '';
                document.getElementById(`imgView${inputNumber}`).src = '';
                return;
            }

            viewImage(event, inputNumber);
        }

        function viewImage(event, index) {
            const input = event.target;
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    const dataURL = e.target.result;
                    const image = document.getElementById(`imgView${index}`);
                    image.src = dataURL;


                    document.getElementById(`cropper-container-${index}`).style.display = 'block';


                    if (croppers[index]) {
                        croppers[index].destroy();
                    }


                    image.onload = function () {

                        croppers[index] = new Cropper(image, {
                            aspectRatio: NaN,
                            viewMode: 1,
                            dragMode: 'move',
                            guides: true,
                            background: true,
                            autoCropArea: 0.8,
                            zoomable: true,
                            scalable: true,
                            movable: true,
                            rotatable: true,
                            minContainerWidth: 300,
                            minContainerHeight: 300,
                            ready: function () {
                                console.log(`Cropper ${index} initialized`);

                                this.cropper.crop();
                            }
                        });
                    };


                    document.getElementById(`saveButton${index}`).onclick = function () {
                        saveCroppedImage(index);
                    };
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        function saveCroppedImage(index) {
            if (!croppers[index]) {
                console.error(`Cropper ${index} not initialized`);
                return;
            }

            try {

                const croppedCanvas = croppers[index].getCroppedCanvas({
                    minWidth: 256,
                    minHeight: 256,
                    maxWidth: 4096,
                    maxHeight: 4096
                });

                if (!croppedCanvas) {
                    console.error('Could not get cropped canvas');
                    return;
                }


                const croppedImageDataURL = croppedCanvas.toDataURL('image/png');
                const croppedImg = document.getElementById(`croppedImg${index}`);
                croppedImg.src = croppedImageDataURL;


                document.getElementById(`preview-container-${index}`).style.display = 'block';


                croppedCanvas.toBlob((blob) => {
                    if (!blob) {
                        console.error('Failed to create blob');
                        return;
                    }


                    const timestamp = new Date().getTime();
                    const fileName = `cropped-image-${timestamp}-${index}.png`;
                    const file = new File([blob], fileName, { type: 'image/png' });


                    const dataTransfer = new DataTransfer();
                    dataTransfer.items.add(file);
                    document.getElementById(`input${index}`).files = dataTransfer.files;


                    document.getElementById(`cropper-container-${index}`).style.display = 'none';


                    addThumbnail(croppedImageDataURL, index);

                    console.log(`Image ${index} cropped and saved as ${fileName}`);
                }, 'image/png', 0.9);

            } catch (error) {
                console.error('Error cropping image:', error);
            }
        }

        function cancelCrop(index) {

            if (croppers[index]) {
                croppers[index].destroy();
                croppers[index] = null;
            }


            document.getElementById(`input${index}`).value = '';


            document.getElementById(`cropper-container-${index}`).style.display = 'none';
            document.getElementById(`preview-container-${index}`).style.display = 'none';
        }

        function addThumbnail(imageSrc, index) {
            const container = document.getElementById('addedImagesContainer');


            const existingThumbnail = container.querySelector(`.thumbnail[data-index="${index}"]`);
            if (existingThumbnail) {

                existingThumbnail.querySelector('img').src = imageSrc;
                return;
            }


            const thumbnailDiv = document.createElement('div');
            thumbnailDiv.className = 'thumbnail';
            thumbnailDiv.dataset.index = index;


            const img = document.createElement('img');
            img.src = imageSrc;
            img.alt = `Product image ${index}`;


            const removeBtn = document.createElement('span');
            removeBtn.className = 'remove-icon';
            removeBtn.innerHTML = '&times;';
            removeBtn.onclick = function () {

                thumbnailDiv.remove();


                document.getElementById(`input${index}`).value = '';
                document.getElementById(`preview-container-${index}`).style.display = 'none';


                if (croppers[index]) {
                    croppers[index].destroy();
                    croppers[index] = null;
                }
            };


            thumbnailDiv.appendChild(img);
            thumbnailDiv.appendChild(removeBtn);
            container.appendChild(thumbnailDiv);
        }
        function validateImageFile(file) {
            if (!file) return false;

            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) return false;

            const maxSize = 5 * 1024 * 1024;
            if (file.size > maxSize) return false;

            return true;
        }

        function validateForm() {
            clearErrorMessages();
            const name = document.getElementsByName('productName')[0].value;
            const description = document.getElementById('descriptionid').value;
            const brand = document.getElementsByName('brand')[0].value;
            const saleprice = document.getElementsByName('salePrice')[0].value;
            const category = document.getElementsByName('category')[0].value;
            const images = document.getElementById('input1');
            const quantity = document.getElementsByName('quantity')[0].value;
            let isValid = true;

            if (name.trim() === "") {
                displayErrorMessage('productName-error', 'Please enter a product name.');
                isValid = false;
            } else if (!/^[a-zA-Z\s;,.]+$/.test(name.trim())) {
                displayErrorMessage('productName-error', 'Product name can only contain letters, spaces, and the following characters: ; , .');
                isValid = false;
            }

            if (description.trim() === "") {
                displayErrorMessage('description-error', 'Please enter a product description.');
                isValid = false;
            } else if (!/^[a-zA-Z0-9\s;:"._-]+$/.test(description.trim())) {
                displayErrorMessage('description-error', 'Product description can only contain letters, numbers, spaces, and the following characters: ; : " . _ -');
                isValid = false;
            }

            if (parseInt(quantity) < 0) {
                displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                isValid = false;
            }

            const sanitizedSalePrice = saleprice.trim().replace(/,/g, '');
            if (
                !/^\d{4,6}(\.\d{1,2})?$/.test(sanitizedSalePrice) ||
                parseFloat(sanitizedSalePrice) < 1000 ||
                parseFloat(sanitizedSalePrice) > 100000
            ) {
                displayErrorMessage(
                    'salePrice-error',
                    'Please enter a valid sale price'
                );
                isValid = false;
            }

            if (images.files.length === 0) {
                displayErrorMessage("images-error", 'Please select at least one image.');
                isValid = false;
            } else if (!validateImageFile(images.files[0])) {
                displayErrorMessage("images-error", 'Please select a valid image file (JPG, JPEG, or PNG) under 5MB.');
                isValid = false;
            }

            const additionalImages = [
                document.getElementById('input2'),
                document.getElementById('input3'),
                document.getElementById('input4')
            ];

            for (let i = 0; i < additionalImages.length; i++) {
                if (additionalImages[i].files.length > 0 && !validateImageFile(additionalImages[i].files[0])) {
                    displayErrorMessage(`images-error`, 'All images must be valid image files (JPG, JPEG, or PNG) under 5MB.');
                    isValid = false;
                    break;
                }
            }

            if (!isValid) {
                return false;
            }

            const form = document.querySelector('form');
            const formData = new FormData(form);


            fetch('/admin/addProducts', {
                method: 'POST',
                body: formData
            })
                .then(response => {

                    console.log('Full response:', response);


                    const contentType = response.headers.get('content-type');
                    console.log('Content Type:', contentType);


                    if (response.redirected) {
                        window.location.href = response.url;
                        return null;
                    }


                    if (contentType && contentType.includes('application/json')) {
                        return response.json();
                    }


                    return response.text().then(text => {
                        console.error('Unexpected response text:', text);
                        throw new Error('Unexpected server response');
                    });
                })
                .then(data => {
                    if (data) {

                        if (data.productExists) {

                            Swal.fire({
                                icon: 'warning',
                                title: 'Product Already Exists',
                                text: data.message || 'A product with this name already exists.',
                                confirmButtonText: 'OK',
                                confirmButtonColor: '#3085d6'
                            });
                        } else if (data.error) {

                            Swal.fire({
                                icon: 'error',
                                title: 'Submission Error',
                                text: data.message || 'Unable to add product. Please try again.',
                                confirmButtonText: 'OK'
                            });
                        }
                    }
                })
                .catch(error => {
                    console.error('Submission Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Submission Error',
                        text: 'Unable to add product. Please try again.',
                        confirmButtonText: 'OK'
                    });
                });

            return false;
        }

        function validateImageFile(file) {
            if (!file) return false;

            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png'];
            if (!allowedTypes.includes(file.type)) return false;

            const maxSize = 5 * 1024 * 1024;
            if (file.size > maxSize) return false;

            return true;
        }

        function displayErrorMessage(elementId, message) {
            var errorElement = document.getElementById(elementId);
            errorElement.innerText = message;
            errorElement.style.display = "block";
        }

        function clearErrorMessages() {
            const errorElements = document.getElementsByClassName('error-message');
            Array.from(errorElements).forEach(element => {
                element.innerText = '';
                element.style.display = 'none';
            });
        }
    </script>

    <%- include("../../views/partials/admin/footer") %>