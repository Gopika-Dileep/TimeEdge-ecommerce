<%- include("../../views/partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link rel="stylesheet" href="/styles/category.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
</head>

<style>
    .content-main {
        position: absolute;
        top: 70px;
        left: 240px;
        width: calc(100% - 240px);
        padding: 2rem;
    }
    @media (max-width: 1000px) {
        .content-main {
        position: absolute;
        top: 50px;
        left: 20px;
        width: calc(100% - 30px);
        padding: 2rem;
    }
    }
</style>
<body>
  <section class="content-main">
    <div class="content-header">
      <h2 class="content-title card-title">Category</h2>
    </div>

    <header class="card-header text-center mb-4">
      <form action="/admin/category" method="GET" class="d-inline">
        <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="max-width: 500px; margin: auto;">
          <input
            type="text"
            class="form-control border-0 rounded-pill"
            placeholder="Search categories"
            name="search"
            required
          />
          <button class="btn btn-primary rounded-pill" type="submit">Search</button>
        </div>
      </form>
    </header>


    <div class="card">
      <div class="card-body">
        <div class="row">
         
          <div class="col-md-3">
            <form method="POST" action="/admin/addCategory" id="categoryCreateForm" onsubmit="return validateCategoryForm()">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input
                  type="text"
                  name="name"
                  placeholder="Type here"
                  class="form-control"
                  id="product_name"
                  required
                />
                <div class="invalid-feedback" id="nameError"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea
                  placeholder="Type here"
                  name="description"
                  class="form-control"
                  id="descriptionId"
                  required
                ></textarea>
                <div class="invalid-feedback" id="descriptionError"></div>
              </div>
              <div class="d-grid">
                <button class="btn btn-primary" type="submit">Create category</button>
              </div>
            </form>
          </div>

        
          <div class="col-md-9">
            <div class="table-responsive">
              <table class="table table-striped table-hover">
                <thead>
                  <tr class="text-center">
                    <th>#</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Status</th>
                    <th>Offer</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% if (category && category.length > 0) { %>
                    <% category.forEach((category, index) => { %>
                      <tr class="align-middle">
                        <td class="text-center"><%= index + 1 %></td>
                        <td class="text-center"><%= category.name %></td>
                        <td class="text-center"><%= category.description %></td>
                        <td><%= category.categoryOffer %></td>
                       
                        <td class="text-center">
                          <% if (category.isListed) { %>
                            <span class="badge bg-success">Listed</span>
                          <% } else { %>
                            <span class="badge bg-danger">Unlisted</span>
                          <% } %>
                        </td>
                        <td>
                          <% if (category.categoryOffer) { %>
                              <button onclick="removeOffer('<%= category._id %>')" class="btn btn-danger btn-icon">
                                  <i class="bi bi-trash"></i>
                              </button>
                          <% } else { %>
                              <button onclick="addOffer('<%= category._id %>')" class="btn btn-success btn-icon">
                                  <i class="bi bi-plus"></i>
                              </button>
                          <% } %>
                      </td>
                        <td class="text-center">
                          <% if (category.isListed==true) { %>
                              <button 
                                  class="btn btn-danger btn-sm text-white text-decoration-none unlist-btn" 
                                  data-id="<%= category._id %>" 
                                  aria-label="Unlist category">
                                  Unlist
                              </button>
                          <% } else { %>
                            <button 
                            class="btn btn-success btn-sm text-white text-decoration-none list-btn" 
                            data-id="<%= category._id %>" 
                            aria-label="Unlist category">
                            list
                        </button>
                          <% } %>
                          <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-info btn-sm text-white">Edit</a>
                      </td>
                      </tr>
                    <% }); %>
                  <% } else { %>
                    <tr>
                      <td colspan="7" class="text-center">No categories found</td>
                    </tr>
                  <% } %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="pagination-container mt-4">
      <ul class="pagination justify-content-center">
        <% if (currentpage > 1) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= currentpage - 1 %>">&laquo; Previous</a>
          </li>
        <% } %>
        <% for (let i = 1; i <= totalpage; i++) { %>
          <li class="page-item <%= i === currentpage ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
          </li>
        <% } %>
        <% if (currentpage < totalpage) { %>
          <li class="page-item">
            <a class="page-link" href="?page=<%= currentpage + 1 %>">Next &raquo;</a>
          </li>
        <% } %>
      </ul>
    </div>
   
  </section>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
 
  <script>
    function handleFormSubmit(event) {
        event.preventDefault(); 
        if (!validateForm()) {
            return; 
        }
    
        const name = document.getElementsByName("name")[0].value.trim();
        const description = document.getElementById("descriptionId").value.trim();
    
        fetch("/admin/addCategory", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ name, description })
        })
        .then(response => {
        
          
            if (!response.ok) {
                throw new Error(HTTP `error! Status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
          console.log(data)
            if (data) {
                Swal.fire({
                    icon: "success",
                    title: "Category Added",
                    text: "The category has been added successfully!",
                    confirmButtonText: "OK"
                }).then(() => {
                    location.reload(); 
                });
            } else {
                throw new Error(data.error || "An error occurred while adding the category");
            }
        })
        .catch(error => {
            Swal.fire({
                icon: "error",
                title: "Oops!",
               
                text:'Category already'
            });
        });
    }
    
    function validateForm() {
        clearErrorMessage(); 
        const name = document.getElementsByName("name")[0].value.trim();
        const description = document.getElementById("descriptionId").value.trim();
        let isValid = true;
    
    
        if (name === "") {
            displayErrorMessage("name-error", "Please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z0-9\s]+$/.test(name)) {
            displayErrorMessage("name-error", "Category name should contain only alphanumeric characters");
            isValid = false;
        }
    
   
        if (description === "") {
            displayErrorMessage("description-error", "Please enter a description");
            isValid = false;
        }
    
        return isValid;
    }
    
    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        if (errorElement) { 
            errorElement.innerHTML = message;
            errorElement.style.display = "block";
        }
    }
    async function addOffer(categoryId) {
    const { value: amount } = await Swal.fire({
        title: "Offer in percentage",
        input: "number",
        inputLabel: "Percentage",
        inputPlaceholder: '%',
    });

    if (amount !== null) { 
        $.ajax({
            url: "/admin/addCategoryOffer",
            method: "POST",
            data: {
                percentage: amount,
                categoryId: categoryId,
            },
            success: (response) => {
                if (response.status === true) {
                    Swal.fire('Offer added', 'The offer has been added successfully', 'success').then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Failed', 'Unable to add the offer', 'error');
                }
            },
            error: (err) => {
                console.error(err);
                Swal.fire('Error', 'An error occurred while adding the offer', 'error');
            },
        });
    }
}

function removeOffer(categoryId) {
    try {
        Swal.fire({
            title: "Remove offer",
            text: "Are you sure you want to remove this offer?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!',
        }).then(async (result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/admin/removeCategoryOffer",
                    method: 'POST',
                    data: {
                      categoryId: categoryId
                    },
                    success: (response) => {
                        if (response.status === true) {
                            Swal.fire("Removed!", "The offer has been removed.", "success").then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire('Failed', 'Unable to remove the offer', 'error');
                        }
                    },
                    error: (err) => {
                        console.error(err);
                        Swal.fire('Error', 'An error occurred while removing the offer', 'error');
                    }
                });
            }
        });
    } catch (error) {
        console.error(error);
    }
}
    function clearErrorMessage() {

        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach(element => {
            element.innerText = "";
            element.style.display = "none";
        });
    }

    document.addEventListener("DOMContentLoaded",function(){
     const UnListBtn = document.querySelectorAll('.unlist-btn')
     UnListBtn.forEach(function (button){
       button.addEventListener('click',function(){
        const catId= button.getAttribute('data-id');
            $.ajax({
              url:`/admin/unlistCategory/${catId}`,
              method:'GET',
              success: function(response){
                location.reload()
              },
              error:function (xhr,status,error){
                console.error('error while unlisting user')
              }
            })
       })
     })



   const listbtn = document.querySelectorAll('.list-btn')
   listbtn.forEach(function (button){
    button.addEventListener('click',function(){
      const catId=button.getAttribute('data-id')
      $.ajax({
        url:`/admin/listCategory/${catId}`,
        method:"GET",
        success:function(response){
          location.reload()
        },
        error:function(xhr,status,error){
          console.error('error while listing user')
        }
      })
    })
   })
  })


    </script>


<%- include("../../views/partials/admin/footer") %>