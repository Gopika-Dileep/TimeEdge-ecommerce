<%- include("../../views/partials/admin/header") %>
<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
  <style>
    .content-main {
      padding: 2rem;
      background-color: #fff;
      min-height: 100vh;
    }

    .breadcrumb {
      margin-bottom: 1.5rem;
      color: #6b7280;
    }

    .breadcrumb a {
      color: #3b82f6;
      text-decoration: none;
    }

    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .page-title {
      font-size: 1.875rem;
      font-weight: 600;
      color: #111827;
    }
  
.search-container {
    position: relative;
    width: 300px;
    display: flex;
    align-items: center;
}

.search-input {
    width: 100%;
    padding: 0.625rem 2.8rem 0.625rem 1rem;
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
    outline: none;
    font-size: 0.875rem;
    transition: border-color 0.2s, box-shadow 0.2s;
}

.search-input:focus {
    border-color: #2563eb;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.1);
}

.search-icon {
    position: absolute;
    right: 2.2rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6b7280;
    cursor: pointer;
    padding: 0.25rem;
    transition: color 0.2s;
}

.search-icon:hover {
    color: #2563eb;
}

.clear-search {
    position: absolute;
    right: 0.5rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6b7280;
    cursor: pointer;
    padding: 0.25rem;
    display: none;
    transition: color 0.2s;
}

.clear-search:hover {
    color: #dc2626;
}

.clear-search.show {
    display: block;
}

    .btn-add {
      background-color:  #2563eb;
      color: white;
      padding: 0.625rem 1rem;
      border-radius: 0.375rem;
      border: none;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .btn-add:hover {
      background-color: #16a34a;
    }

    .table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      margin-bottom: 2rem;
    }

    .table th {
      background-color: #f9fafb;
      padding: 0.75rem 1rem;
      text-align: left;
      color: #4b5563;
      font-weight: 600;
      border-bottom: 1px solid #e5e7eb;
    }

    .table td {
      padding: 0.75rem 1rem;
      border-bottom: 1px solid #e5e7eb;
      background-color: white;
    }

    .status-badge {
      padding: 0.25rem 0.75rem;
      border-radius: 9999px;
      font-size: 0.875rem;
      font-weight: 500;
      display: inline-block;
    }

    .status-listed {
      background-color: #dcfce7;
      color: #16a34a;
    }

    .status-unlisted {
      background-color: #fee2e2;
      color: #dc2626;
    }

    .actions-cell {
      position: relative;
    }

    .actions-dropdown {
      position: relative;
      display: inline-block;
    }

    .actions-btn {
      background: none;
      border: none;
      cursor: pointer;
      padding: 0.25rem;
    }

    .dropdown-menu {
      position: absolute;
      right: 0;
      top: 100%;
      background-color: white;
      border: 1px solid #e5e7eb;
      border-radius: 0.375rem;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      display: none;
      z-index: 10;
      min-width: 120px;
    }

    .dropdown-menu.show {
      display: block;
    }

    .dropdown-item {
      padding: 0.5rem 1rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: #374151;
      text-decoration: none;
      cursor: pointer;
    }

    .dropdown-item:hover {
      background-color: #f3f4f6;
    }

    .offer-badge {
      background-color: #dbeafe;
      color: #2563eb;
      padding: 0.25rem 0.75rem;
      border-radius: 9999px;
      font-size: 0.875rem;
    }
    .content-main {
        position: absolute;
        top: 70px;
        left: 240px;
        width: calc(100% - 240px);
        padding: 2rem;
    }
    @media (max-width: 1000px) {
        .content-main {
        position: absolute;
        top: 50px;
        left: 20px;
        width: calc(100% - 30px);
        padding: 2rem;
    }
    }
  </style>
</head>

<body>
  <section class="content-main">
    <div class="breadcrumb">
      Admin > Categories
    </div>
    
    <div class="page-header">
      <h1 class="page-title">Category Management</h1>
    </div>

    
  <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
    <div class="search-container">
      <form action="/admin/category" method="GET" id="searchForm">
          <input 
              type="text" 
              class="search-input" 
              placeholder="Search categories" 
              name="search" 
              value="<%= searchQuery || '' %>"
              id="searchInput"
          />
          <i class="bi bi-search search-icon" id="searchIcon"></i>
          <i class="bi bi-x-circle clear-search" id="clearSearch"></i>
      </form>
    </div>
    <button class="btn-add" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
      <i class="bi bi-plus-lg"></i>
      Add Category
    </button>
  </div>

    <div class="table-responsive">
      <table class="table">
        <thead>
          <tr>
            <th>#</th>
            <th>Name</th>
            <th>Description</th>
            <th>Offer</th>
            <th>Status</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% if (category && category.length > 0) { %>
            <% category.forEach((category, index) => { %>
              <tr>
                <td><%= index + 1 %></td>
                <td><%= category.name %></td>
                <td><%= category.description %></td>
                <td>
                  <% if (category.categoryOffer) { %>
                    <span class="offer-badge"><%= category.categoryOffer %>% OFF</span>
                  <% } else { %>
                    -
                  <% } %>
                </td>
                <td>
                  <span class="status-badge <%= category.isListed ? 'status-listed' : 'status-unlisted' %>">
                    <%= category.isListed ? 'Listed' : 'Unlisted' %>
                  </span>
                </td>
                <td class="actions-cell">
                  <div class="actions-dropdown">
                    <button class="actions-btn" onclick="toggleDropdown(this)">
                      <i class="bi bi-three-dots-vertical"></i>
                    </button>
                    <div class="dropdown-menu">
                      <% if (category.isListed) { %>
                        <a class="dropdown-item unlist-btn" data-id="<%= category._id %>">
                          <i class="bi bi-x-circle"></i> Unlist
                        </a>
                      <% } else { %>
                        <a class="dropdown-item list-btn" data-id="<%= category._id %>">
                          <i class="bi bi-check-circle"></i> List
                        </a>
                      <% } %>
                      <a href="/admin/editCategory?id=<%= category._id %>" class="dropdown-item">
                        <i class="bi bi-pencil"></i> Edit
                      </a>
                      <% if (category.categoryOffer) { %>
                        <a class="dropdown-item" onclick="removeOffer('<%= category._id %>')">
                          <i class="bi bi-trash"></i> Remove Offer
                        </a>
                      <% } else { %>
                        <a class="dropdown-item" onclick="addOffer('<%= category._id %>')">
                          <i class="bi bi-plus"></i> Add Offer
                        </a>
                      <% } %>
                    </div>
                  </div>
                </td>
              </tr>
            <% }); %>
          <% } else { %>
            <tr>
              <td colspan="6" class="text-center">No categories found</td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <div class="pagination-container mt-4">
      <ul class="pagination justify-content-center">
        <% if (searchQuery) { %>
          <% const searchParam = `&search=${searchQuery}`; %>
          <% if (currentpage > 1) { %>
            <li class="page-item">
              <a class="page-link" href="?page=<%= currentpage - 1 %><%= searchParam %>">&laquo; Previous</a>
            </li>
          <% } %>
          <% for (let i = 1; i <= totalpage; i++) { %>
            <li class="page-item <%= i === currentpage ? 'active' : '' %>">
              <a class="page-link" href="?page=<%= i %><%= searchParam %>"><%= i %></a>
            </li>
          <% } %>
          <% if (currentpage < totalpage) { %>
            <li class="page-item">
              <a class="page-link" href="?page=<%= currentpage + 1 %><%= searchParam %>">Next &raquo;</a>
            </li>
          <% } %>
        <% } else { %>
          <% if (currentpage > 1) { %>
            <li class="page-item">
              <a class="page-link" href="?page=<%= currentpage - 1 %>">&laquo; Previous</a>
            </li>
          <% } %>
          <% for (let i = 1; i <= totalpage; i++) { %>
            <li class="page-item <%= i === currentpage ? 'active' : '' %>">
              <a class="page-link" href="?page=<%= i %>"><%= i %></a>
            </li>
          <% } %>
          <% if (currentpage < totalpage) { %>
            <li class="page-item">
              <a class="page-link" href="?page=<%= currentpage + 1 %>">Next &raquo;</a>
            </li>
          <% } %>
        <% } %>
      </ul>
    </div>

    <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="categoryCreateForm" onsubmit="return handleFormSubmit(event)">
              <div class="mb-4">
                <label for="product_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Enter category name" class="form-control" id="product_name" required />
                <div class="invalid-feedback" id="nameError"></div>
              </div>
              <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea placeholder="Enter category description" name="description" class="form-control" id="descriptionId" required></textarea>
                <div class="invalid-feedback" id="descriptionError"></div>
              </div>
              <div class="text-end">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary ms-2">Create Category</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </section>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>

  <script>

  document.getElementById('searchIcon').addEventListener('click', function() {
      const searchInput = document.querySelector('.search-input');
      if (searchInput.value.trim()) {
        document.getElementById('searchForm').submit();
      } else {
        window.location.href = '/admin/category';
      }
    });

   
    function toggleDropdown(button) {
      const dropdowns = document.querySelectorAll('.dropdown-menu');
      dropdowns.forEach(dropdown => {
        if (dropdown !== button.nextElementSibling) {
          dropdown.classList.remove('show');
        }
      });
      button.nextElementSibling.classList.toggle('show');
    }

    
    document.addEventListener('click', function(event) {
      if (!event.target.closest('.actions-dropdown')) {
        document.querySelectorAll('.dropdown-menu').forEach(dropdown => {
          dropdown.classList.remove('show');
        });
      }
    });




    // function handleFormSubmit(event) {
    //     event.preventDefault(); 
    //     if (!validateForm()) {
    //         return; 
    //     }
    
    //     const name = document.getElementsByName("name")[0].value.trim();
    //     const description = document.getElementById("descriptionId").value.trim();
    
    //     fetch("/admin/addCategory", {
    //         method: "POST",
    //         headers: {
    //             "Content-Type": "application/json"
    //         },
    //         body: JSON.stringify({ name, description })
    //     })
    //     .then(response => {
    //         if (!response.ok) {
    //             throw new Error(`HTTP error! Status: ${response.status}`);
    //         }
    //         return response.json();
    //     })
    //     .then(data => {
    //         if (data) {
    //             $('#addCategoryModal').modal('hide');
    //             Swal.fire({
    //                 icon: "success",
    //                 title: "Category Added",
    //                 text: "The category has been added successfully!",
    //                 confirmButtonText: "OK"
    //             }).then(() => {
    //                 location.reload(); 
    //             });
    //         } else {
    //             throw new Error(data.error || "An error occurred while adding the category");
    //         }
    //     })
    //     .catch(error => {
    //         Swal.fire({
    //             icon: "error",
    //             title: "Oops!",
    //             text: 'Category already exists'
    //         });
    //     });
    // }
    function handleFormSubmit(event) {
    event.preventDefault(); 
    if (!validateForm()) {
        return; 
    }

    const name = document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();

    fetch("/admin/addCategory", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ name, description })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
           
            const modal = document.getElementById("addCategoryModal");
            const bootstrapModal = bootstrap.Modal.getInstance(modal);
            if (bootstrapModal) {
                bootstrapModal.hide();
            }
            
           
            document.getElementsByName("name")[0].value = "";
            document.getElementById("descriptionId").value = "";
            
            Swal.fire({
                icon: "success",
                title: "Category Added",
                text: "The category has been added successfully!",
                confirmButtonText: "OK"
            }).then(() => {
                window.location.reload();
            });
        } else {
            throw new Error(data.error || "An error occurred while adding the category");
        }
    })
    .catch(error => {
        Swal.fire({
            icon: "error",
            title: "Oops!",
            text: error.message || 'Category already exists'
        });
    });
}
// function handleFormSubmit(event) {
//     event.preventDefault(); 
//     if (!validateForm()) {
//         return; 
//     }

//     const name = document.getElementsByName("name")[0].value.trim();
//     const description = document.getElementById("descriptionId").value.trim();

//     fetch("/admin/addCategory", {
//         method: "POST",
//         headers: {
//             "Content-Type": "application/json"
//         },
//         body: JSON.stringify({ name, description })
//     })
//     .then(response => response.json())
//     .then(data => {
//         if (data.success) {
            
//             const modal = document.getElementById("addCategoryModal");
//             const bootstrapModal = bootstrap.Modal.getInstance(modal);
//             if (bootstrapModal) {
//                 bootstrapModal.hide();
//             }
           
//             document.getElementsByName("name")[0].value = "";
//             document.getElementById("descriptionId").value = "";
            
     
//             Swal.fire({
//                 icon: "success",
//                 title: "Success",
//                 text: data.message,
//                 confirmButtonText: "OK"
//             }).then(() => {
//                 window.location.reload();
//             });
//         } else {
//             throw new Error(data.message || "An error occurred while adding the category");
//         }
//     })
//     .catch(error => {
//         Swal.fire({
//             icon: "error",
//             title: "Error",
//             text: error.message || "An error occurred while adding the category"
//         });
//     });
// }
function validateForm() {
    clearErrorMessage(); 
    const name = document.getElementsByName("name")[0].value.trim();
    const description = document.getElementById("descriptionId").value.trim();
    let isValid = true;

    if (name === "") {
        displayErrorMessage("name-error", "Please enter a name");
        isValid = false;
    } else if (!/^[a-zA-Z0-9\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Category name should contain only alphanumeric characters");
        isValid = false;
    }

    if (description === "") {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) { 
        errorElement.innerHTML = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessage() {
    document.querySelectorAll(".error-message").forEach(el => {
        el.innerHTML = "";
        el.style.display = "none";
    });
}
    async function addOffer(categoryId) {
    const { value: amount } = await Swal.fire({
        title: "Offer in percentage",
        input: "number",
        inputLabel: "Percentage",
        inputPlaceholder: '%',
    });

    if (amount !== null) { 
        $.ajax({
            url: "/admin/addCategoryOffer",
            method: "POST",
            data: {
                percentage: amount,
                categoryId: categoryId,
            },
            success: (response) => {
                if (response.status === true) {
                    Swal.fire('Offer added', 'The offer has been added successfully', 'success').then(() => {
                       
                        const offerCell = $(`tr:has([data-id="${categoryId}"])`).find('td:nth-child(4)');
                        offerCell.html(`<span class="offer-badge">${amount}% OFF</span>`);
                        
                        const dropdownMenu = $(`[data-id="${categoryId}"]`).closest('.actions-dropdown').find('.dropdown-menu');
                        const offerAction = dropdownMenu.find('a:last-child');
                        offerAction.html('<i class="bi bi-trash"></i> Remove Offer');
                        offerAction.attr('onclick', `removeOffer('${categoryId}')`);
                    });
                } else {
                    Swal.fire('Failed', 'Unable to add the offer', 'error');
                }
            },
            error: (err) => {
                console.error(err);
                Swal.fire('Error', 'An error occurred while adding the offer', 'error');
            },
        });
    }
}

function removeOffer(categoryId) {
    try {
        Swal.fire({
            title: "Remove offer",
            text: "Are you sure you want to remove this offer?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, remove it!',
        }).then(async (result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/admin/removeCategoryOffer",
                    method: 'POST',
                    data: {
                        categoryId: categoryId
                    },
                    success: (response) => {
                        if (response.status === true) {
                            Swal.fire("Removed!", "The offer has been removed.", "success").then(() => {
                               
                                const offerCell = $(`tr:has([data-id="${categoryId}"])`).find('td:nth-child(4)');
                                offerCell.html('-');
                                
                              
                                const dropdownMenu = $(`[data-id="${categoryId}"]`).closest('.actions-dropdown').find('.dropdown-menu');
                                const offerAction = dropdownMenu.find('a:last-child');
                                offerAction.html('<i class="bi bi-plus"></i> Add Offer');
                                offerAction.attr('onclick', `addOffer('${categoryId}')`);
                            });
                        } else {
                            Swal.fire('Failed', 'Unable to remove the offer', 'error');
                        }
                    },
                    error: (err) => {
                        console.error(err);
                        Swal.fire('Error', 'An error occurred while removing the offer', 'error');
                    }
                });
            }
        });
    } catch (error) {
        console.error(error);
    }
}
    function clearErrorMessage() {

        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach(element => {
            element.innerText = "";
            element.style.display = "none";
        });
    }

    document.addEventListener("DOMContentLoaded",function(){
     const UnListBtn = document.querySelectorAll('.unlist-btn')
     UnListBtn.forEach(function (button){
       button.addEventListener('click',function(){
        const catId= button.getAttribute('data-id');
            $.ajax({
              url:`/admin/unlistCategory/${catId}`,
              method:'GET',
              success: function(response){
                location.reload()
              },
              error:function (xhr,status,error){
                console.error('error while unlisting user')
              }
            })
       })
     })



   const listbtn = document.querySelectorAll('.list-btn')
   listbtn.forEach(function (button){
    button.addEventListener('click',function(){
      const catId=button.getAttribute('data-id')
      $.ajax({
        url:`/admin/listCategory/${catId}`,
        method:"GET",
        success:function(response){
          location.reload()
        },
        error:function(xhr,status,error){
          console.error('error while listing user')
        }
      })
    })
   })
  })



document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const searchIcon = document.getElementById('searchIcon');
    const clearSearch = document.getElementById('clearSearch');
    const searchForm = document.getElementById('searchForm');

    
    function toggleClearButton() {
        if (searchInput.value.trim()) {
            clearSearch.classList.add('show');
        } else {
            clearSearch.classList.remove('show');
        }
    }

   
    toggleClearButton();

    
    searchInput.addEventListener('input', toggleClearButton);

   
    searchIcon.addEventListener('click', function() {
        if (searchInput.value.trim()) {
            searchForm.submit();
        }
    });

   
    clearSearch.addEventListener('click', function(e) {
        e.preventDefault();
        searchInput.value = '';
        clearSearch.classList.remove('show');
        window.location.href = '/admin/category';
    });

    
    searchForm.addEventListener('submit', function(e) {
        if (!searchInput.value.trim()) {
            e.preventDefault();
            window.location.href = '/admin/category';
        }
    });

   
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            if (!searchInput.value.trim()) {
                e.preventDefault();
                window.location.href = '/admin/category';
            }
        }
    });
});
  
  </script>

<%- include("../../views/partials/admin/footer") %>
 


