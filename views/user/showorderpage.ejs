<%- include("../../views/partials/user/header") %>

<style>
    .container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1.5rem;
    }

    .page-title {
        color: #1a1a1a;
        font-size: 1.5rem;
        font-weight: 500;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e5e7eb;
    }

    .info-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
        margin-bottom: 3rem;
    }

    .info-box {
        background: #fff;
        border: 1px solid #e5e7eb;
        border-radius: 6px;
        padding: 1.5rem;
    }

    .box-title {
        font-size: 1.1rem;
        color: #1a1a1a;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
    }

    .box-title span:first-child {
        color: #4b5563;
        margin-right: 0.25rem;
    }

    .info-row {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .info-label {
        color: #6b7280;
        font-size: 0.925rem;
    }

    .info-value {
        color: #1a1a1a;
        font-size: 0.95rem;
    }

    .order-id {
        color: #2563eb;
        font-family: monospace;
    }

    .status-badge {
        display: inline-block;
        padding: 0.25rem 0.75rem;
        border-radius: 4px;
        font-size: 0.85rem;
        font-weight: 500;
        background: #fee2e2;
        color: #991b1b;
    }

    .items-section {
        background: #fff;
        border: 1px solid #e5e7eb;
        border-radius: 6px;
        padding: 1.5rem;
    }

    .items-title {
        font-size: 1.1rem;
        color: #1a1a1a;
        margin-bottom: 1.5rem;
    }

    .items-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .items-table th {
        text-align: left;
        padding: 1rem;
        background: #f8fafc;
        color: #4b5563;
        font-weight: 500;
        font-size: 0.925rem;
        border-top: 1px solid #e5e7eb;
        border-bottom: 1px solid #e5e7eb;
    }

    .items-table td {
        padding: 1rem;
        border-bottom: 1px solid #e5e7eb;
        vertical-align: middle;
    }

    .product-cell {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .product-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 4px;
    }

    .product-info .name {
        color: #1a1a1a;
        font-weight: 500;
        margin-bottom: 0.25rem;
    }

    .product-info .price {
        color: #6b7280;
        font-size: 0.875rem;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

    .modal-content {
        background: white;
        border-radius: 8px;
        width: 90%;
        max-width: 500px;
        margin: 10vh auto;
        padding: 1.5rem;
    }

    .modal-content h3 {
        margin-bottom: 1rem;
        color: #1a1a1a;
        font-size: 1.1rem;
        font-weight: 500;
    }

    .modal-content textarea {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #e5e7eb;
        border-radius: 4px;
        margin-bottom: 1rem;
        min-height: 100px;
        font-size: 0.95rem;
    }

    .modal-buttons {
        display: flex;
        gap: 1rem;
        justify-content: flex-end;
    }

    .modal-buttons button {
        padding: 0.5rem 1rem;
        border-radius: 4px;
        font-size: 0.875rem;
        font-weight: 500;
        cursor: pointer;
        border: none;
    }

    .confirm-btn {
        background-color: #2563eb;
        color: white;
    }

    .close-btn {
        background-color: #e5e7eb;
        color: #4b5563;
    }
</style>

</style>

<div class="container">
    <h1 class="page-title">Order Details</h1>

    <div class="info-grid">
        <div class="info-box">
            <div class="box-title">
                <span>Order</span>
                <span>Information</span>
            </div>
            
            <div class="info-row">
                <div class="info-label">Order ID</div>
                <div class="info-value order-id">#<%= order._id %></div>
            </div>
            
            <div class="info-row">
                <div class="info-label">Order Date</div>
                <div class="info-value"><%= order.createdOn.toLocaleDateString() %></div>
            </div>
            
            <div class="info-row">
                <div class="info-label">Total Amount</div>
                <div class="info-value">₹<%= order.finalAmount.toFixed(2) %></div>
            </div>
            
            <div class="info-row">
                <div class="info-label">Payment Method</div>
                <div class="info-value"><%= order.paymentMethod %></div>
            </div>
            
            <div class="info-row">
                <div class="info-label">Status</div>
                <div class="status-badge"><%= order.status %></div>
            </div>
        </div>

        <div class="info-box">
            <div class="box-title">
                <span>Shipping</span>
                <span>Address</span>
            </div>
            
            <div class="info-row">
                <div class="info-value" style="font-weight: 500;"><%= specificAddress.name %></div>
            </div>
            
            <div class="info-row">
                <div class="info-value"><%= specificAddress.addressType %></div>
            </div>
            
            <div class="info-row">
                <div class="info-value">
                    <%= specificAddress.city %>, <%= specificAddress.state %>
                </div>
                <div class="info-value"><%= specificAddress.pincode %></div>
            </div>
        </div>
    </div>

    <div class="items-section">
        <div class="items-title">Order Items</div>
        
        <table class="items-table">
            <thead>
                <tr>
                    <th>Item</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% order.orderedItems.forEach((item) => { %>
                <tr data-item-id="<%= item._id %>">
                    <td>
                        <div class="product-cell">
                            <img src="/uploads/productImages/<%= item.products.productImage[0] %>" 
                                 alt="<%= item.products.productName %>"
                                 class="product-image">
                            <div class="product-info">
                                <div class="name"><%= item.products.productName %></div>
                                <div class="price">₹<%= order.finalAmount.toFixed(2) %></div>
                            </div>
                        </div>
                    </td>
                    <td><%= item.quantity %></td>
                    <td>₹<%= (order.finalAmount * item.quantity).toFixed(2) %></td>
                    <td>
                        <span class="status-badge"><%= item.status %></span>
                        <% if (item.cancelReason) { %>
                            <div style="color: #991b1b; font-size: 0.85rem; margin-top: 0.5rem;">
                                <%= item.cancelReason %>
                            </div>
                        <% } %>
                    </td>
                    <td>
                        <% if (!item.cancelReason && item.status === 'delivered' && 
                              item.status.toLowerCase() !== 'returned') { %>
                            <button class="action-button return-button"
                                    onclick="showReturnModal('<%= item.products._id %>')">
                                Return
                            </button>
                        <% } %>
                        <% if (!item.cancelReason && !['cancelled', 'delivered', 'returned']
                              .includes(item.status.toLowerCase())) { %>
                            <button class="action-button cancel-button"
                                    onclick="showCancelModal('<%= item._id %>')">
                                Cancel
                            </button>
                        <% } %>
                    </td>
                </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
</div>

    <div id="cancelModal" class="modal">
        <div class="modal-content">
            <h3>Cancellation Reason</h3>
            <textarea id="cancelReason" placeholder="Please provide a reason for cancellation"></textarea>
            <div class="modal-buttons">
                <button id="confirmCancel" class="confirm-btn">Confirm</button>
                <button id="closeModal" class="close-btn">Close</button>
            </div>
        </div>
    </div>
    <div id="returnModal" class="modal">
        <div class="modal-content">
            <h3>Return Reason</h3>
            <textarea id="returnReason" placeholder="Please provide a reason for returning"></textarea>
            <div class="modal-buttons">
                <button id="confirmReturn" class="confirm-btn">Confirm</button>
                <button id="closeReturnModal" class="close-btn">Close</button>
            </div>
        </div>
    </div>


    <script>
        let currentItemId = null;

        function showCancelModal(itemId) {
            currentItemId = itemId;
            document.getElementById('cancelModal').style.display = 'block';
            document.getElementById('cancelReason').value = '';
        }

        document.addEventListener('DOMContentLoaded', function () {
            const modal = document.getElementById('cancelModal');
            const closeBtn = document.getElementById('closeModal');
            const confirmBtn = document.getElementById('confirmCancel');
            const reasonText = document.getElementById('cancelReason');

            closeBtn.onclick = function () {
                modal.style.display = "none";
            }

            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }

            function updateItemStatus(itemId, status, reason) {
                const itemRow = document.querySelector(`tr[data-item-id="${itemId}"]`);
                if (itemRow) {
                    const statusCell = itemRow.querySelector('td:nth-child(4)');
                    const actionsCell = itemRow.querySelector('td:nth-child(5)');
                    
                    // Update status badge
                    statusCell.innerHTML = `
                        <span class="status-badge">${status}</span>
                        ${reason ? `<div style="color: #991b1b; font-size: 0.85rem; margin-top: 0.5rem;">
                            ${reason}
                        </div>` : ''}
                    `;

                    // Remove action buttons
                    actionsCell.innerHTML = '';
                }
            }

            confirmBtn.onclick = function () {
                const reason = reasonText.value;
                if (!reason.trim()) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Missing Reason',
                        text: 'Please provide a reason for cancellation.',
                    });
                    return;
                }

                // Get order ID directly from URL
                const orderId = window.location.search.split('id=')[1];
                
                fetch(`/orders/${orderId}/cancel-item`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        itemId: currentItemId,
                        reason: reason
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        modal.style.display = "none";
                        updateItemStatus(currentItemId, 'Cancelled', reason);
                        Swal.fire({
                            icon: 'success',
                            title: 'Product Cancelled',
                            text: 'The product has been cancelled successfully.',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message || 'Failed to cancel item'
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Failed to cancel item. Please try again.'
                    });
                });
            }
        });
        function showReturnModal(itemId) {
            currentItemId = itemId;
            document.getElementById('returnModal').style.display = 'block';
            document.getElementById('returnReason').value = '';
        }

        document.addEventListener('DOMContentLoaded', function () {
            const returnModal = document.getElementById('returnModal');
            const closeReturnBtn = document.getElementById('closeReturnModal');
            const confirmReturnBtn = document.getElementById('confirmReturn');
            const returnReasonText = document.getElementById('returnReason');

            closeReturnBtn.onclick = function () {
                returnModal.style.display = "none";
            }

            window.onclick = function (event) {
                if (event.target == returnModal) {
                    returnModal.style.display = "none";
                }
            }
            confirmReturnBtn.onclick = function () {
                const reason = returnReasonText.value;
                if (!reason.trim()) {
                    swal.fire({
                        icon: 'warning',
                        title: 'Missing Reason',
                        text: 'Please provide a reason for returning the item',
                        confirmButtonText: 'OK'
                    });
                    return;
                }



                const orderItemsContainer = document.querySelector('.order-items');
                const orderId = orderItemsContainer.getAttribute('data-order-id');

                fetch(`/returnorder/${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId: currentItemId,
                        reason: reason
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Failed to return item. Please try again.',
                            confirmButtonText: 'OK'
                        });
                    });

            }
        });
    </script>

    <%- include("../../views/partials/user/footer") %>